
package Letrum.Fontes;
import Azzal.Renderizador;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import Azzal.Utils.Cor;
import Letrum.Fonte;
import Letrum.Letra;


public class G30 implements Fonte {



	 public final int LARGURA = 540;
	 public final int ALTURA = 700;
	 public final int FONTE = 30;
	 private int COR_FONTE = new Color(0, 0, 0).getRGB();
	 private int COR_FUNDO = 0;


	 private BufferedImage mImagem;
	 private Renderizador mRenderizador;
	 private ArrayList<Letra> mLetras;
	private final Letra LETRA_00 = new Letra ("a",28,3,49,43);
	private final Letra LETRA_01 = new Letra ("b",73,3,96,43);
	private final Letra LETRA_02 = new Letra ("c",118,3,138,43);
	private final Letra LETRA_03 = new Letra ("d",163,3,186,43);
	private final Letra LETRA_04 = new Letra ("e",208,3,229,43);
	private final Letra LETRA_05 = new Letra ("f",253,3,268,43);
	private final Letra LETRA_06 = new Letra ("g",298,3,321,43);
	private final Letra LETRA_07 = new Letra ("h",343,3,367,43);
	private final Letra LETRA_08 = new Letra ("i",388,3,401,43);
	private final Letra LETRA_09 = new Letra ("j",433,3,446,43);
	private final Letra LETRA_10 = new Letra ("k",478,3,501,43);
	private final Letra LETRA_11 = new Letra ("l",28,53,41,93);
	private final Letra LETRA_12 = new Letra ("m",73,53,107,93);
	private final Letra LETRA_13 = new Letra ("n",118,53,142,93);
	private final Letra LETRA_14 = new Letra ("o",163,53,185,93);
	private final Letra LETRA_15 = new Letra ("p",208,53,231,93);
	private final Letra LETRA_16 = new Letra ("q",253,53,276,93);
	private final Letra LETRA_17 = new Letra ("r",298,53,316,93);
	private final Letra LETRA_18 = new Letra ("s",343,53,362,93);
	private final Letra LETRA_19 = new Letra ("t",388,53,404,93);
	private final Letra LETRA_20 = new Letra ("u",433,53,457,93);
	private final Letra LETRA_21 = new Letra ("v",478,53,497,93);
	private final Letra LETRA_22 = new Letra ("w",28,103,56,143);
	private final Letra LETRA_23 = new Letra ("x",73,103,93,143);
	private final Letra LETRA_24 = new Letra ("y",118,103,137,143);
	private final Letra LETRA_25 = new Letra ("z",163,103,182,143);
	private final Letra LETRA_26 = new Letra ("A",208,103,233,143);
	private final Letra LETRA_27 = new Letra ("B",253,103,280,143);
	private final Letra LETRA_28 = new Letra ("C",298,103,324,143);
	private final Letra LETRA_29 = new Letra ("D",343,103,371,143);
	private final Letra LETRA_30 = new Letra ("E",388,103,413,143);
	private final Letra LETRA_31 = new Letra ("F",433,103,456,143);
	private final Letra LETRA_32 = new Letra ("G",478,103,506,143);
	private final Letra LETRA_33 = new Letra ("H",28,153,58,193);
	private final Letra LETRA_34 = new Letra ("I",73,153,89,193);
	private final Letra LETRA_35 = new Letra ("J",118,153,134,193);
	private final Letra LETRA_36 = new Letra ("K",163,153,191,193);
	private final Letra LETRA_37 = new Letra ("L",208,153,231,193);
	private final Letra LETRA_38 = new Letra ("M",253,153,288,193);
	private final Letra LETRA_39 = new Letra ("N",298,153,327,193);
	private final Letra LETRA_40 = new Letra ("O",343,153,371,193);
	private final Letra LETRA_41 = new Letra ("P",388,153,413,193);
	private final Letra LETRA_42 = new Letra ("Q",433,153,461,193);
	private final Letra LETRA_43 = new Letra ("R",478,153,505,193);
	private final Letra LETRA_44 = new Letra ("S",28,203,52,243);
	private final Letra LETRA_45 = new Letra ("T",73,203,97,243);
	private final Letra LETRA_46 = new Letra ("U",118,203,146,243);
	private final Letra LETRA_47 = new Letra ("V",163,203,188,243);
	private final Letra LETRA_48 = new Letra ("W",208,203,244,243);
	private final Letra LETRA_49 = new Letra ("X",253,203,278,243);
	private final Letra LETRA_50 = new Letra ("Y",298,203,321,243);
	private final Letra LETRA_51 = new Letra ("Z",343,203,367,243);
	private final Letra LETRA_52 = new Letra ("_",388,203,405,243);
	private final Letra LETRA_53 = new Letra ("0",433,203,456,243);
	private final Letra LETRA_54 = new Letra ("1",478,203,501,243);
	private final Letra LETRA_55 = new Letra ("2",28,253,51,293);
	private final Letra LETRA_56 = new Letra ("3",73,253,96,293);
	private final Letra LETRA_57 = new Letra ("4",118,253,141,293);
	private final Letra LETRA_58 = new Letra ("5",163,253,186,293);
	private final Letra LETRA_59 = new Letra ("6",208,253,231,293);
	private final Letra LETRA_60 = new Letra ("7",253,253,276,293);
	private final Letra LETRA_61 = new Letra ("8",298,253,321,293);
	private final Letra LETRA_62 = new Letra ("9",343,253,366,293);
	private final Letra LETRA_63 = new Letra ("-",388,253,402,293);
	private final Letra LETRA_64 = new Letra ("<",433,253,460,293);
	private final Letra LETRA_65 = new Letra (">",478,253,505,293);
	private final Letra LETRA_66 = new Letra (".",28,303,40,343);
	private final Letra LETRA_67 = new Letra (",",73,303,85,343);
	private final Letra LETRA_68 = new Letra (":",118,303,131,343);
	private final Letra LETRA_69 = new Letra (";",163,303,176,343);
	private final Letra LETRA_70 = new Letra ("/",208,303,221,343);
	private final Letra LETRA_71 = new Letra ("\\",253,303,266,343);
	private final Letra LETRA_72 = new Letra ("+",298,303,325,343);
	private final Letra LETRA_73 = new Letra ("-",343,303,357,343);
	private final Letra LETRA_74 = new Letra ("*",388,303,406,343);
	private final Letra LETRA_75 = new Letra ("=",433,303,460,343);
	private final Letra LETRA_76 = new Letra ("(",478,303,494,343);
	private final Letra LETRA_77 = new Letra (")",28,353,44,393);
	private final Letra LETRA_78 = new Letra ("[",73,353,89,393);
	private final Letra LETRA_79 = new Letra ("]",118,353,134,393);
	private final Letra LETRA_80 = new Letra ("{",163,353,184,393);
	private final Letra LETRA_81 = new Letra ("}",208,353,229,393);
	private final Letra LETRA_82 = new Letra ("!",253,353,268,393);
	private final Letra LETRA_83 = new Letra ("@",298,353,330,393);
	private final Letra LETRA_84 = new Letra ("#",343,353,370,393);
	private final Letra LETRA_85 = new Letra ("$",388,353,411,393);
	private final Letra LETRA_86 = new Letra ("%",433,353,464,393);
	private final Letra LETRA_87 = new Letra ("ç",478,353,498,393);
	private final Letra LETRA_88 = new Letra ("Ç",28,403,54,443);
	private final Letra LETRA_89 = new Letra ("á",73,403,94,443);
	private final Letra LETRA_90 = new Letra ("à",118,403,139,443);
	private final Letra LETRA_91 = new Letra ("â",163,403,184,443);
	private final Letra LETRA_92 = new Letra ("ã",208,403,229,443);
	private final Letra LETRA_93 = new Letra ("ä",253,403,274,443);
	private final Letra LETRA_94 = new Letra ("é",298,403,319,443);
	private final Letra LETRA_95 = new Letra ("è",343,403,364,443);
	private final Letra LETRA_96 = new Letra ("ê",388,403,409,443);
	private final Letra LETRA_97 = new Letra ("ẽ",433,403,454,443);
	private final Letra LETRA_98 = new Letra ("ë",478,403,499,443);
	private final Letra LETRA_99 = new Letra ("í",28,453,41,493);
	private final Letra LETRA_100 = new Letra ("ì",73,453,86,493);
	private final Letra LETRA_101 = new Letra ("î",118,453,131,493);
	private final Letra LETRA_102 = new Letra ("ĩ",163,453,176,493);
	private final Letra LETRA_103 = new Letra ("ï",208,453,221,493);
	private final Letra LETRA_104 = new Letra ("ó",253,453,275,493);
	private final Letra LETRA_105 = new Letra ("ò",298,453,320,493);
	private final Letra LETRA_106 = new Letra ("ô",343,453,365,493);
	private final Letra LETRA_107 = new Letra ("õ",388,453,410,493);
	private final Letra LETRA_108 = new Letra ("ö",433,453,455,493);
	private final Letra LETRA_109 = new Letra ("ú",478,453,502,493);
	private final Letra LETRA_110 = new Letra ("ù",28,503,52,543);
	private final Letra LETRA_111 = new Letra ("û",73,503,97,543);
	private final Letra LETRA_112 = new Letra ("ũ",118,503,142,543);
	private final Letra LETRA_113 = new Letra ("ü",163,503,187,543);
	private final Letra LETRA_114 = new Letra ("Á",208,503,233,543);
	private final Letra LETRA_115 = new Letra ("À",253,503,278,543);
	private final Letra LETRA_116 = new Letra ("Â",298,503,323,543);
	private final Letra LETRA_117 = new Letra ("Ã",343,503,368,543);
	private final Letra LETRA_118 = new Letra ("Ä",388,503,413,543);
	private final Letra LETRA_119 = new Letra ("É",433,503,458,543);
	private final Letra LETRA_120 = new Letra ("È",478,503,503,543);
	private final Letra LETRA_121 = new Letra ("Ê",28,553,53,593);
	private final Letra LETRA_122 = new Letra ("Ẽ",73,553,98,593);
	private final Letra LETRA_123 = new Letra ("Ë",118,553,143,593);
	private final Letra LETRA_124 = new Letra ("Í",163,553,179,593);
	private final Letra LETRA_125 = new Letra ("Ì",208,553,224,593);
	private final Letra LETRA_126 = new Letra ("Î",253,553,269,593);
	private final Letra LETRA_127 = new Letra ("Ĩ",298,553,314,593);
	private final Letra LETRA_128 = new Letra ("Ï",343,553,359,593);
	private final Letra LETRA_129 = new Letra ("Ó",388,553,416,593);
	private final Letra LETRA_130 = new Letra ("Ò",433,553,461,593);
	private final Letra LETRA_131 = new Letra ("Ô",478,553,506,593);
	private final Letra LETRA_132 = new Letra ("Õ",28,603,56,643);
	private final Letra LETRA_133 = new Letra ("Ö",73,603,101,643);
	private final Letra LETRA_134 = new Letra ("Ú",118,603,146,643);
	private final Letra LETRA_135 = new Letra ("Ù",163,603,191,643);
	private final Letra LETRA_136 = new Letra ("Û",208,603,236,643);
	private final Letra LETRA_137 = new Letra ("Ũ",253,603,281,643);
	private final Letra LETRA_138 = new Letra ("Ü",298,603,326,643);


	 public G30() {
		 mImagem = new BufferedImage(LARGURA, ALTURA, BufferedImage.TYPE_INT_ARGB);
		 mLetras = new ArrayList<Letra>();
		 IMontadora();
		 init_data();
	 }
	   public G30(Cor eCor) {
	     mImagem = new BufferedImage(LARGURA, ALTURA, BufferedImage.TYPE_INT_ARGB);
	    mLetras = new ArrayList<Letra>();
	    COR_FONTE = new Color(eCor.getRed(), eCor.getGreen(), eCor.getBlue()).getRGB();
	       IMontadora();
	      init_data();
	   }

	private void IMontadora() {

		Graphics g = mImagem.getGraphics();
		g.setColor(new Color(0, 0, 0, 0));
		g.fillRect(0, 0, mImagem.getWidth(), mImagem.getHeight());

	}

	private void mapear(int x, int y, int q) {
		for (int xi = x; xi < (x + q); xi++) {
			mImagem.setRGB(xi, y, COR_FONTE);
		}
	}



	public void setRenderizador(Renderizador eRenderizador) {
		mRenderizador = eRenderizador;
	}


 	  public int getAltura() {
 		     return FONTE;
 	}
 public void escreveLinha(int y, int x1, int x2, String eTexto1, String eTexto2) {
     escreva(x1, y, eTexto1);
    escreva(x2, y, eTexto2);
  }


	 public void escreva(int x, int y, String frase) {
	  int i = 0;
	  int o = frase.length();
	   while (i < o) {
	     String l = String.valueOf(frase.charAt(i));
	    if (l.contentEquals(" ")) {
	        x += 20;
	   } else if (l.contentEquals("\t")) {
	        x += 30;
	    } else {
	       boolean enc = false;
	       Letra letraSelecionada = null;
	     if (LETRA_00.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_00;
	    } else if (LETRA_01.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_01;
	    } else if (LETRA_02.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_02;
	    } else if (LETRA_03.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_03;
	    } else if (LETRA_04.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_04;
	    } else if (LETRA_05.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_05;
	    } else if (LETRA_06.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_06;
	    } else if (LETRA_07.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_07;
	    } else if (LETRA_08.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_08;
	    } else if (LETRA_09.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_09;
	    } else if (LETRA_10.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_10;
	    } else if (LETRA_11.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_11;
	    } else if (LETRA_12.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_12;
	    } else if (LETRA_13.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_13;
	    } else if (LETRA_14.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_14;
	    } else if (LETRA_15.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_15;
	    } else if (LETRA_16.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_16;
	    } else if (LETRA_17.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_17;
	    } else if (LETRA_18.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_18;
	    } else if (LETRA_19.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_19;
	    } else if (LETRA_20.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_20;
	    } else if (LETRA_21.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_21;
	    } else if (LETRA_22.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_22;
	    } else if (LETRA_23.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_23;
	    } else if (LETRA_24.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_24;
	    } else if (LETRA_25.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_25;
	    } else if (LETRA_26.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_26;
	    } else if (LETRA_27.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_27;
	    } else if (LETRA_28.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_28;
	    } else if (LETRA_29.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_29;
	    } else if (LETRA_30.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_30;
	    } else if (LETRA_31.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_31;
	    } else if (LETRA_32.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_32;
	    } else if (LETRA_33.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_33;
	    } else if (LETRA_34.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_34;
	    } else if (LETRA_35.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_35;
	    } else if (LETRA_36.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_36;
	    } else if (LETRA_37.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_37;
	    } else if (LETRA_38.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_38;
	    } else if (LETRA_39.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_39;
	    } else if (LETRA_40.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_40;
	    } else if (LETRA_41.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_41;
	    } else if (LETRA_42.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_42;
	    } else if (LETRA_43.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_43;
	    } else if (LETRA_44.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_44;
	    } else if (LETRA_45.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_45;
	    } else if (LETRA_46.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_46;
	    } else if (LETRA_47.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_47;
	    } else if (LETRA_48.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_48;
	    } else if (LETRA_49.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_49;
	    } else if (LETRA_50.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_50;
	    } else if (LETRA_51.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_51;
	    } else if (LETRA_52.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_52;
	    } else if (LETRA_53.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_53;
	    } else if (LETRA_54.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_54;
	    } else if (LETRA_55.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_55;
	    } else if (LETRA_56.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_56;
	    } else if (LETRA_57.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_57;
	    } else if (LETRA_58.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_58;
	    } else if (LETRA_59.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_59;
	    } else if (LETRA_60.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_60;
	    } else if (LETRA_61.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_61;
	    } else if (LETRA_62.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_62;
	    } else if (LETRA_63.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_63;
	    } else if (LETRA_64.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_64;
	    } else if (LETRA_65.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_65;
	    } else if (LETRA_66.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_66;
	    } else if (LETRA_67.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_67;
	    } else if (LETRA_68.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_68;
	    } else if (LETRA_69.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_69;
	    } else if (LETRA_70.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_70;
	    } else if (LETRA_71.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_71;
	    } else if (LETRA_72.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_72;
	    } else if (LETRA_73.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_73;
	    } else if (LETRA_74.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_74;
	    } else if (LETRA_75.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_75;
	    } else if (LETRA_76.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_76;
	    } else if (LETRA_77.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_77;
	    } else if (LETRA_78.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_78;
	    } else if (LETRA_79.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_79;
	    } else if (LETRA_80.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_80;
	    } else if (LETRA_81.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_81;
	    } else if (LETRA_82.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_82;
	    } else if (LETRA_83.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_83;
	    } else if (LETRA_84.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_84;
	    } else if (LETRA_85.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_85;
	    } else if (LETRA_86.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_86;
	    } else if (LETRA_87.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_87;
	    } else if (LETRA_88.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_88;
	    } else if (LETRA_89.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_89;
	    } else if (LETRA_90.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_90;
	    } else if (LETRA_91.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_91;
	    } else if (LETRA_92.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_92;
	    } else if (LETRA_93.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_93;
	    } else if (LETRA_94.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_94;
	    } else if (LETRA_95.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_95;
	    } else if (LETRA_96.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_96;
	    } else if (LETRA_97.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_97;
	    } else if (LETRA_98.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_98;
	    } else if (LETRA_99.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_99;
	    } else if (LETRA_100.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_100;
	    } else if (LETRA_101.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_101;
	    } else if (LETRA_102.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_102;
	    } else if (LETRA_103.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_103;
	    } else if (LETRA_104.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_104;
	    } else if (LETRA_105.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_105;
	    } else if (LETRA_106.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_106;
	    } else if (LETRA_107.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_107;
	    } else if (LETRA_108.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_108;
	    } else if (LETRA_109.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_109;
	    } else if (LETRA_110.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_110;
	    } else if (LETRA_111.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_111;
	    } else if (LETRA_112.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_112;
	    } else if (LETRA_113.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_113;
	    } else if (LETRA_114.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_114;
	    } else if (LETRA_115.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_115;
	    } else if (LETRA_116.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_116;
	    } else if (LETRA_117.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_117;
	    } else if (LETRA_118.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_118;
	    } else if (LETRA_119.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_119;
	    } else if (LETRA_120.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_120;
	    } else if (LETRA_121.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_121;
	    } else if (LETRA_122.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_122;
	    } else if (LETRA_123.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_123;
	    } else if (LETRA_124.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_124;
	    } else if (LETRA_125.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_125;
	    } else if (LETRA_126.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_126;
	    } else if (LETRA_127.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_127;
	    } else if (LETRA_128.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_128;
	    } else if (LETRA_129.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_129;
	    } else if (LETRA_130.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_130;
	    } else if (LETRA_131.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_131;
	    } else if (LETRA_132.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_132;
	    } else if (LETRA_133.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_133;
	    } else if (LETRA_134.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_134;
	    } else if (LETRA_135.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_135;
	    } else if (LETRA_136.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_136;
	    } else if (LETRA_137.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_137;
	    } else if (LETRA_138.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_138;
	         }
	       if (enc) {
	            int ox = x;
	             int yc = y;
	             for (int y1 = letraSelecionada.getY1(); y1 < letraSelecionada.getY2(); y1++) {
	                 int xc = ox;
	                for (int xi = letraSelecionada.getX1(); xi < letraSelecionada.getX2(); xi++) {
	                    int v = mImagem.getRGB(xi, y1);
	                    if (v != 0) {
	                        mRenderizador.drawPixelBruto(xc, yc, v);
	                      }
	                      xc += 1;
	                  }
	                  yc += 1;
	              }
	               x += (letraSelecionada.getX2() - letraSelecionada.getX1());
	          }
	      }
	      i += 1;
	    }
	   }


	 public int getLarguraDe( String frase) {
	  int x = 0;
	  int i = 0;
	  int o = frase.length();
	   while (i < o) {
	     String l = String.valueOf(frase.charAt(i));
	    if (l.contentEquals(" ")) {
	        x += 20;
	   } else if (l.contentEquals("\t")) {
	        x += 30;
	    } else {
	       boolean enc = false;
	       Letra letraSelecionada = null;
	     if (LETRA_00.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_00;
	    } else if (LETRA_01.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_01;
	    } else if (LETRA_02.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_02;
	    } else if (LETRA_03.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_03;
	    } else if (LETRA_04.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_04;
	    } else if (LETRA_05.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_05;
	    } else if (LETRA_06.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_06;
	    } else if (LETRA_07.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_07;
	    } else if (LETRA_08.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_08;
	    } else if (LETRA_09.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_09;
	    } else if (LETRA_10.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_10;
	    } else if (LETRA_11.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_11;
	    } else if (LETRA_12.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_12;
	    } else if (LETRA_13.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_13;
	    } else if (LETRA_14.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_14;
	    } else if (LETRA_15.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_15;
	    } else if (LETRA_16.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_16;
	    } else if (LETRA_17.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_17;
	    } else if (LETRA_18.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_18;
	    } else if (LETRA_19.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_19;
	    } else if (LETRA_20.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_20;
	    } else if (LETRA_21.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_21;
	    } else if (LETRA_22.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_22;
	    } else if (LETRA_23.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_23;
	    } else if (LETRA_24.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_24;
	    } else if (LETRA_25.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_25;
	    } else if (LETRA_26.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_26;
	    } else if (LETRA_27.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_27;
	    } else if (LETRA_28.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_28;
	    } else if (LETRA_29.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_29;
	    } else if (LETRA_30.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_30;
	    } else if (LETRA_31.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_31;
	    } else if (LETRA_32.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_32;
	    } else if (LETRA_33.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_33;
	    } else if (LETRA_34.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_34;
	    } else if (LETRA_35.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_35;
	    } else if (LETRA_36.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_36;
	    } else if (LETRA_37.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_37;
	    } else if (LETRA_38.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_38;
	    } else if (LETRA_39.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_39;
	    } else if (LETRA_40.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_40;
	    } else if (LETRA_41.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_41;
	    } else if (LETRA_42.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_42;
	    } else if (LETRA_43.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_43;
	    } else if (LETRA_44.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_44;
	    } else if (LETRA_45.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_45;
	    } else if (LETRA_46.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_46;
	    } else if (LETRA_47.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_47;
	    } else if (LETRA_48.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_48;
	    } else if (LETRA_49.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_49;
	    } else if (LETRA_50.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_50;
	    } else if (LETRA_51.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_51;
	    } else if (LETRA_52.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_52;
	    } else if (LETRA_53.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_53;
	    } else if (LETRA_54.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_54;
	    } else if (LETRA_55.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_55;
	    } else if (LETRA_56.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_56;
	    } else if (LETRA_57.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_57;
	    } else if (LETRA_58.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_58;
	    } else if (LETRA_59.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_59;
	    } else if (LETRA_60.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_60;
	    } else if (LETRA_61.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_61;
	    } else if (LETRA_62.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_62;
	    } else if (LETRA_63.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_63;
	    } else if (LETRA_64.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_64;
	    } else if (LETRA_65.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_65;
	    } else if (LETRA_66.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_66;
	    } else if (LETRA_67.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_67;
	    } else if (LETRA_68.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_68;
	    } else if (LETRA_69.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_69;
	    } else if (LETRA_70.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_70;
	    } else if (LETRA_71.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_71;
	    } else if (LETRA_72.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_72;
	    } else if (LETRA_73.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_73;
	    } else if (LETRA_74.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_74;
	    } else if (LETRA_75.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_75;
	    } else if (LETRA_76.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_76;
	    } else if (LETRA_77.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_77;
	    } else if (LETRA_78.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_78;
	    } else if (LETRA_79.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_79;
	    } else if (LETRA_80.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_80;
	    } else if (LETRA_81.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_81;
	    } else if (LETRA_82.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_82;
	    } else if (LETRA_83.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_83;
	    } else if (LETRA_84.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_84;
	    } else if (LETRA_85.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_85;
	    } else if (LETRA_86.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_86;
	    } else if (LETRA_87.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_87;
	    } else if (LETRA_88.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_88;
	    } else if (LETRA_89.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_89;
	    } else if (LETRA_90.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_90;
	    } else if (LETRA_91.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_91;
	    } else if (LETRA_92.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_92;
	    } else if (LETRA_93.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_93;
	    } else if (LETRA_94.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_94;
	    } else if (LETRA_95.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_95;
	    } else if (LETRA_96.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_96;
	    } else if (LETRA_97.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_97;
	    } else if (LETRA_98.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_98;
	    } else if (LETRA_99.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_99;
	    } else if (LETRA_100.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_100;
	    } else if (LETRA_101.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_101;
	    } else if (LETRA_102.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_102;
	    } else if (LETRA_103.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_103;
	    } else if (LETRA_104.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_104;
	    } else if (LETRA_105.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_105;
	    } else if (LETRA_106.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_106;
	    } else if (LETRA_107.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_107;
	    } else if (LETRA_108.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_108;
	    } else if (LETRA_109.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_109;
	    } else if (LETRA_110.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_110;
	    } else if (LETRA_111.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_111;
	    } else if (LETRA_112.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_112;
	    } else if (LETRA_113.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_113;
	    } else if (LETRA_114.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_114;
	    } else if (LETRA_115.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_115;
	    } else if (LETRA_116.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_116;
	    } else if (LETRA_117.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_117;
	    } else if (LETRA_118.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_118;
	    } else if (LETRA_119.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_119;
	    } else if (LETRA_120.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_120;
	    } else if (LETRA_121.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_121;
	    } else if (LETRA_122.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_122;
	    } else if (LETRA_123.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_123;
	    } else if (LETRA_124.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_124;
	    } else if (LETRA_125.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_125;
	    } else if (LETRA_126.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_126;
	    } else if (LETRA_127.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_127;
	    } else if (LETRA_128.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_128;
	    } else if (LETRA_129.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_129;
	    } else if (LETRA_130.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_130;
	    } else if (LETRA_131.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_131;
	    } else if (LETRA_132.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_132;
	    } else if (LETRA_133.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_133;
	    } else if (LETRA_134.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_134;
	    } else if (LETRA_135.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_135;
	    } else if (LETRA_136.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_136;
	    } else if (LETRA_137.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_137;
	    } else if (LETRA_138.igual(l)) {
	         enc = true;
	            letraSelecionada = LETRA_138;
	         }
	       if (enc) {
	               x += (letraSelecionada.getX2() - letraSelecionada.getX1());
	          }
	      }
	      i += 1;
	    }
	    return x;
	   }
private void colocar(int x, int y, int q) {
 for (int xi = x; xi < (x + q); xi++) {
    mImagem.setRGB(xi, y, COR_FONTE);
  }
  }
	private void init_data () {
	 area_0();
	 area_1();
	 area_2();
	 area_3();
	 area_4();
	 area_5();
	 area_6();
	 area_7();
	 area_8();
	 area_9();
	 area_10();
	 area_11();
	 area_12();
	 area_13();
	 area_14();
	 area_15();
	 area_16();
	 area_17();
	 area_18();
	 area_19();
	 area_20();
	 area_21();
	 area_22();
	 area_23();
	 area_24();
	 area_25();
	 area_26();
	 area_27();
	 area_28();
	 area_29();
	 area_30();
	 area_31();
	 area_32();
	 area_33();
	 area_34();
	 area_35();
	 area_36();
	 area_37();
	 area_38();
	 area_39();
	 area_40();
	 area_41();
	 area_42();
	 area_43();
	 area_44();
	 area_45();
	 area_46();
	 area_47();
	 area_48();
	 area_49();
	 area_50();
	 area_51();
	 area_52();
	 area_53();
	 area_54();
	 area_55();
	 area_56();
	 area_57();
	 area_58();
	 area_59();
	 area_60();
	 area_61();
	 area_62();
	 area_63();
	 area_64();
	 area_65();
	 area_66();
	 area_67();
	 area_68();
	 area_69();
	 area_70();
	 area_71();
	 area_72();
	 area_73();
	 area_74();
	 area_75();
	 area_76();
	 area_77();
	 area_78();
	 area_79();
	 area_80();
	 area_81();
	 area_82();
	 area_83();
	 area_84();
	 area_85();
	 area_86();
	 area_87();
	 area_88();
	 area_89();
	 area_90();
	}
	 private void area_0(){
		    mapear(76,12,7);
		    mapear(176,12,7);
		    mapear(261,12,7);
		    mapear(346,12,7);
		    mapear(481,12,7);
		    mapear(76,13,7);
		    mapear(176,13,7);
		    mapear(260,13,9);
		    mapear(346,13,7);
		    mapear(394,13,3);
		    mapear(439,13,3);
		    mapear(481,13,7);
		    mapear(78,14,5);
		    mapear(178,14,5);
		    mapear(259,14,5);
		    mapear(266,14,3);
		    mapear(348,14,5);
		    mapear(393,14,5);
		    mapear(438,14,5);
		    mapear(483,14,5);
		    mapear(78,15,5);
		    mapear(178,15,5);
		    mapear(258,15,5);
		    mapear(267,15,2);
		    mapear(348,15,5);
		    mapear(393,15,5);
		    mapear(438,15,5);
		    mapear(483,15,5);
		    mapear(78,16,5);
		    mapear(178,16,5);
		    mapear(258,16,5);
		    mapear(348,16,5);
		    mapear(393,16,5);
		    mapear(438,16,5);
		    mapear(483,16,5);
		    mapear(78,17,5);
		    mapear(178,17,5);
		    mapear(258,17,5);
		    mapear(348,17,5);
		    mapear(394,17,3);
		    mapear(439,17,3);
		    mapear(483,17,5);
		    mapear(78,18,5);
		    mapear(178,18,5);
		    mapear(258,18,5);
		    mapear(348,18,5);
		    mapear(483,18,5);
		    mapear(78,19,5);
		    mapear(178,19,5);
		    mapear(258,19,5);
	}
	 private void area_1(){
		    mapear(348,19,5);
		    mapear(483,19,5);
		    mapear(34,20,8);
		    mapear(78,20,5);
		    mapear(85,20,6);
		    mapear(126,20,8);
		    mapear(170,20,6);
		    mapear(178,20,5);
		    mapear(216,20,6);
		    mapear(256,20,11);
		    mapear(305,20,6);
		    mapear(313,20,7);
		    mapear(348,20,5);
		    mapear(355,20,6);
		    mapear(391,20,7);
		    mapear(436,20,7);
		    mapear(483,20,5);
		    mapear(492,20,8);
		    mapear(32,21,12);
		    mapear(78,21,14);
		    mapear(124,21,12);
		    mapear(168,21,15);
		    mapear(214,21,10);
		    mapear(256,21,11);
		    mapear(303,21,17);
		    mapear(348,21,5);
		    mapear(354,21,9);
		    mapear(391,21,7);
		    mapear(436,21,7);
		    mapear(483,21,5);
		    mapear(492,21,8);
		    mapear(32,22,3);
		    mapear(40,22,5);
		    mapear(78,22,7);
		    mapear(88,22,5);
		    mapear(123,22,5);
		    mapear(132,22,4);
		    mapear(167,22,6);
		    mapear(176,22,7);
		    mapear(213,22,4);
		    mapear(221,22,4);
		    mapear(258,22,5);
		    mapear(302,22,6);
		    mapear(311,22,7);
		    mapear(348,22,6);
		    mapear(358,22,5);
		    mapear(393,22,5);
		    mapear(438,22,5);
		    mapear(483,22,5);
		    mapear(494,22,3);
	}
	 private void area_2(){
		    mapear(32,23,3);
		    mapear(41,23,5);
		    mapear(78,23,6);
		    mapear(89,23,5);
		    mapear(122,23,5);
		    mapear(133,23,3);
		    mapear(167,23,5);
		    mapear(177,23,6);
		    mapear(212,23,4);
		    mapear(221,23,5);
		    mapear(258,23,5);
		    mapear(302,23,5);
		    mapear(312,23,6);
		    mapear(348,23,6);
		    mapear(359,23,5);
		    mapear(393,23,5);
		    mapear(438,23,5);
		    mapear(483,23,5);
		    mapear(492,23,4);
		    mapear(32,24,2);
		    mapear(41,24,5);
		    mapear(78,24,5);
		    mapear(90,24,5);
		    mapear(121,24,5);
		    mapear(134,24,2);
		    mapear(166,24,5);
		    mapear(178,24,5);
		    mapear(211,24,5);
		    mapear(222,24,4);
		    mapear(258,24,5);
		    mapear(301,24,5);
		    mapear(313,24,5);
		    mapear(348,24,5);
		    mapear(359,24,5);
		    mapear(393,24,5);
		    mapear(438,24,5);
		    mapear(483,24,5);
		    mapear(491,24,3);
		    mapear(35,25,11);
		    mapear(78,25,5);
		    mapear(90,25,5);
		    mapear(121,25,5);
		    mapear(134,25,2);
		    mapear(166,25,5);
		    mapear(178,25,5);
		    mapear(211,25,5);
		    mapear(222,25,4);
		    mapear(258,25,5);
		    mapear(301,25,5);
		    mapear(313,25,5);
	}
	 private void area_3(){
		    mapear(348,25,5);
		    mapear(359,25,5);
		    mapear(393,25,5);
		    mapear(438,25,5);
		    mapear(483,25,5);
		    mapear(490,25,3);
		    mapear(33,26,13);
		    mapear(78,26,5);
		    mapear(90,26,5);
		    mapear(121,26,5);
		    mapear(166,26,5);
		    mapear(178,26,5);
		    mapear(211,26,5);
		    mapear(222,26,5);
		    mapear(258,26,5);
		    mapear(301,26,5);
		    mapear(313,26,5);
		    mapear(348,26,5);
		    mapear(359,26,5);
		    mapear(393,26,5);
		    mapear(438,26,5);
		    mapear(483,26,5);
		    mapear(489,26,5);
		    mapear(32,27,5);
		    mapear(41,27,5);
		    mapear(78,27,5);
		    mapear(90,27,5);
		    mapear(121,27,5);
		    mapear(166,27,5);
		    mapear(178,27,5);
		    mapear(211,27,16);
		    mapear(258,27,5);
		    mapear(301,27,5);
		    mapear(313,27,5);
		    mapear(348,27,5);
		    mapear(359,27,5);
		    mapear(393,27,5);
		    mapear(438,27,5);
		    mapear(483,27,12);
		    mapear(31,28,5);
		    mapear(41,28,5);
		    mapear(78,28,5);
		    mapear(90,28,5);
		    mapear(121,28,5);
		    mapear(166,28,5);
		    mapear(178,28,5);
		    mapear(211,28,16);
		    mapear(258,28,5);
		    mapear(301,28,5);
		    mapear(313,28,5);
	}
	 private void area_4(){
		    mapear(348,28,5);
		    mapear(359,28,5);
		    mapear(393,28,5);
		    mapear(438,28,5);
		    mapear(483,28,12);
		    mapear(31,29,5);
		    mapear(41,29,5);
		    mapear(78,29,5);
		    mapear(90,29,5);
		    mapear(121,29,5);
		    mapear(135,29,2);
		    mapear(166,29,5);
		    mapear(178,29,5);
		    mapear(211,29,5);
		    mapear(258,29,5);
		    mapear(301,29,5);
		    mapear(313,29,5);
		    mapear(348,29,5);
		    mapear(359,29,5);
		    mapear(393,29,5);
		    mapear(438,29,5);
		    mapear(483,29,5);
		    mapear(490,29,6);
		    mapear(31,30,5);
		    mapear(41,30,5);
		    mapear(78,30,5);
		    mapear(90,30,5);
		    mapear(121,30,5);
		    mapear(135,30,2);
		    mapear(166,30,5);
		    mapear(178,30,5);
		    mapear(211,30,5);
		    mapear(225,30,2);
		    mapear(258,30,5);
		    mapear(301,30,5);
		    mapear(313,30,5);
		    mapear(348,30,5);
		    mapear(359,30,5);
		    mapear(393,30,5);
		    mapear(438,30,5);
		    mapear(483,30,5);
		    mapear(491,30,6);
		    mapear(31,31,5);
		    mapear(41,31,5);
		    mapear(78,31,6);
		    mapear(89,31,5);
		    mapear(122,31,5);
		    mapear(134,31,2);
		    mapear(167,31,5);
		    mapear(177,31,6);
	}
	 private void area_5(){
		    mapear(212,31,5);
		    mapear(224,31,2);
		    mapear(258,31,5);
		    mapear(302,31,5);
		    mapear(312,31,6);
		    mapear(348,31,5);
		    mapear(359,31,5);
		    mapear(393,31,5);
		    mapear(438,31,5);
		    mapear(483,31,5);
		    mapear(491,31,7);
		    mapear(31,32,6);
		    mapear(40,32,6);
		    mapear(78,32,7);
		    mapear(88,32,5);
		    mapear(123,32,5);
		    mapear(133,32,3);
		    mapear(167,32,6);
		    mapear(176,32,7);
		    mapear(213,32,5);
		    mapear(223,32,3);
		    mapear(258,32,5);
		    mapear(302,32,6);
		    mapear(311,32,7);
		    mapear(348,32,5);
		    mapear(359,32,5);
		    mapear(393,32,5);
		    mapear(438,32,5);
		    mapear(483,32,5);
		    mapear(492,32,7);
		    mapear(32,33,8);
		    mapear(41,33,7);
		    mapear(76,33,16);
		    mapear(124,33,11);
		    mapear(168,33,17);
		    mapear(214,33,11);
		    mapear(256,33,10);
		    mapear(303,33,15);
		    mapear(346,33,9);
		    mapear(357,33,9);
		    mapear(391,33,9);
		    mapear(438,33,5);
		    mapear(481,33,9);
		    mapear(491,33,10);
		    mapear(33,34,6);
		    mapear(41,34,7);
		    mapear(76,34,7);
		    mapear(85,34,6);
		    mapear(126,34,7);
		    mapear(170,34,6);
	}
	 private void area_6(){
		    mapear(178,34,7);
		    mapear(216,34,7);
		    mapear(256,34,10);
		    mapear(305,34,6);
		    mapear(313,34,5);
		    mapear(346,34,9);
		    mapear(357,34,9);
		    mapear(391,34,9);
		    mapear(438,34,5);
		    mapear(481,34,20);
		    mapear(313,35,5);
		    mapear(438,35,5);
		    mapear(302,36,2);
		    mapear(313,36,5);
		    mapear(438,36,5);
		    mapear(302,37,3);
		    mapear(312,37,5);
		    mapear(432,37,2);
		    mapear(438,37,5);
		    mapear(302,38,4);
		    mapear(311,38,5);
		    mapear(432,38,2);
		    mapear(437,38,5);
		    mapear(302,39,13);
		    mapear(432,39,10);
		    mapear(304,40,9);
		    mapear(433,40,7);
		    mapear(31,62,7);
		    mapear(31,63,7);
		    mapear(33,64,5);
		    mapear(33,65,5);
		    mapear(393,65,5);
		    mapear(33,66,5);
		    mapear(393,66,5);
		    mapear(33,67,5);
		    mapear(393,67,5);
		    mapear(33,68,5);
		    mapear(393,68,5);
		    mapear(33,69,5);
		    mapear(393,69,5);
		    mapear(33,70,5);
		    mapear(76,70,7);
		    mapear(85,70,5);
		    mapear(95,70,5);
		    mapear(121,70,7);
		    mapear(130,70,6);
		    mapear(171,70,8);
		    mapear(211,70,7);
		    mapear(220,70,6);
		    mapear(260,70,6);
	}
	 private void area_7(){
		    mapear(268,70,7);
		    mapear(301,70,7);
		    mapear(311,70,5);
		    mapear(349,70,8);
		    mapear(391,70,12);
		    mapear(436,70,7);
		    mapear(447,70,7);
		    mapear(479,70,10);
		    mapear(492,70,6);
		    mapear(33,71,5);
		    mapear(76,71,7);
		    mapear(84,71,8);
		    mapear(94,71,8);
		    mapear(121,71,7);
		    mapear(129,71,9);
		    mapear(169,71,12);
		    mapear(211,71,16);
		    mapear(258,71,17);
		    mapear(301,71,7);
		    mapear(309,71,7);
		    mapear(347,71,12);
		    mapear(391,71,12);
		    mapear(436,71,7);
		    mapear(447,71,7);
		    mapear(479,71,10);
		    mapear(492,71,6);
		    mapear(33,72,5);
		    mapear(78,72,6);
		    mapear(87,72,7);
		    mapear(97,72,5);
		    mapear(123,72,6);
		    mapear(133,72,5);
		    mapear(168,72,5);
		    mapear(177,72,5);
		    mapear(213,72,7);
		    mapear(223,72,5);
		    mapear(257,72,6);
		    mapear(266,72,7);
		    mapear(303,72,7);
		    mapear(313,72,3);
		    mapear(346,72,6);
		    mapear(356,72,3);
		    mapear(393,72,5);
		    mapear(438,72,5);
		    mapear(449,72,5);
		    mapear(481,72,6);
		    mapear(494,72,2);
		    mapear(33,73,5);
		    mapear(78,73,5);
		    mapear(88,73,5);
	}
	 private void area_8(){
		    mapear(98,73,5);
		    mapear(123,73,6);
		    mapear(134,73,5);
		    mapear(167,73,5);
		    mapear(178,73,5);
		    mapear(213,73,6);
		    mapear(224,73,5);
		    mapear(257,73,5);
		    mapear(267,73,6);
		    mapear(303,73,6);
		    mapear(314,73,2);
		    mapear(346,73,5);
		    mapear(357,73,2);
		    mapear(393,73,5);
		    mapear(438,73,5);
		    mapear(449,73,5);
		    mapear(482,73,5);
		    mapear(493,73,3);
		    mapear(33,74,5);
		    mapear(78,74,5);
		    mapear(88,74,5);
		    mapear(98,74,5);
		    mapear(123,74,5);
		    mapear(134,74,5);
		    mapear(167,74,4);
		    mapear(179,74,4);
		    mapear(213,74,5);
		    mapear(225,74,5);
		    mapear(256,74,5);
		    mapear(268,74,5);
		    mapear(303,74,5);
		    mapear(346,74,5);
		    mapear(357,74,2);
		    mapear(393,74,5);
		    mapear(438,74,5);
		    mapear(449,74,5);
		    mapear(482,74,6);
		    mapear(493,74,2);
		    mapear(33,75,5);
		    mapear(78,75,5);
		    mapear(88,75,5);
		    mapear(98,75,5);
		    mapear(123,75,5);
		    mapear(134,75,5);
		    mapear(166,75,5);
		    mapear(179,75,5);
		    mapear(213,75,5);
		    mapear(225,75,5);
		    mapear(256,75,5);
		    mapear(268,75,5);
	}
	 private void area_9(){
		    mapear(303,75,5);
		    mapear(346,75,7);
		    mapear(393,75,5);
		    mapear(438,75,5);
		    mapear(449,75,5);
		    mapear(483,75,5);
		    mapear(493,75,2);
		    mapear(33,76,5);
		    mapear(78,76,5);
		    mapear(88,76,5);
		    mapear(98,76,5);
		    mapear(123,76,5);
		    mapear(134,76,5);
		    mapear(166,76,5);
		    mapear(179,76,5);
		    mapear(213,76,5);
		    mapear(225,76,5);
		    mapear(256,76,5);
		    mapear(268,76,5);
		    mapear(303,76,5);
		    mapear(346,76,10);
		    mapear(393,76,5);
		    mapear(438,76,5);
		    mapear(449,76,5);
		    mapear(483,76,5);
		    mapear(492,76,2);
		    mapear(33,77,5);
		    mapear(78,77,5);
		    mapear(88,77,5);
		    mapear(98,77,5);
		    mapear(123,77,5);
		    mapear(134,77,5);
		    mapear(166,77,5);
		    mapear(179,77,5);
		    mapear(213,77,5);
		    mapear(225,77,5);
		    mapear(256,77,5);
		    mapear(268,77,5);
		    mapear(303,77,5);
		    mapear(347,77,12);
		    mapear(393,77,5);
		    mapear(438,77,5);
		    mapear(449,77,5);
		    mapear(483,77,6);
		    mapear(492,77,2);
		    mapear(33,78,5);
		    mapear(78,78,5);
		    mapear(88,78,5);
		    mapear(98,78,5);
		    mapear(123,78,5);
	}
	 private void area_10(){
		    mapear(134,78,5);
		    mapear(166,78,5);
		    mapear(179,78,5);
		    mapear(213,78,5);
		    mapear(225,78,5);
		    mapear(256,78,5);
		    mapear(268,78,5);
		    mapear(303,78,5);
		    mapear(349,78,10);
		    mapear(393,78,5);
		    mapear(438,78,5);
		    mapear(449,78,5);
		    mapear(484,78,5);
		    mapear(491,78,3);
		    mapear(33,79,5);
		    mapear(78,79,5);
		    mapear(88,79,5);
		    mapear(98,79,5);
		    mapear(123,79,5);
		    mapear(134,79,5);
		    mapear(166,79,5);
		    mapear(179,79,5);
		    mapear(213,79,5);
		    mapear(225,79,5);
		    mapear(256,79,5);
		    mapear(268,79,5);
		    mapear(303,79,5);
		    mapear(352,79,8);
		    mapear(393,79,5);
		    mapear(438,79,5);
		    mapear(449,79,5);
		    mapear(484,79,6);
		    mapear(491,79,2);
		    mapear(33,80,5);
		    mapear(78,80,5);
		    mapear(88,80,5);
		    mapear(98,80,5);
		    mapear(123,80,5);
		    mapear(134,80,5);
		    mapear(167,80,4);
		    mapear(179,80,4);
		    mapear(213,80,5);
		    mapear(225,80,5);
		    mapear(256,80,5);
		    mapear(268,80,5);
		    mapear(303,80,5);
		    mapear(346,80,2);
		    mapear(355,80,5);
		    mapear(393,80,5);
		    mapear(402,80,2);
	}
	 private void area_11(){
		    mapear(438,80,5);
		    mapear(449,80,5);
		    mapear(485,80,8);
		    mapear(33,81,5);
		    mapear(78,81,5);
		    mapear(88,81,5);
		    mapear(98,81,5);
		    mapear(123,81,5);
		    mapear(134,81,5);
		    mapear(167,81,5);
		    mapear(178,81,5);
		    mapear(213,81,6);
		    mapear(224,81,5);
		    mapear(257,81,5);
		    mapear(267,81,6);
		    mapear(303,81,5);
		    mapear(346,81,3);
		    mapear(355,81,5);
		    mapear(393,81,5);
		    mapear(402,81,2);
		    mapear(438,81,5);
		    mapear(448,81,6);
		    mapear(485,81,7);
		    mapear(33,82,5);
		    mapear(78,82,5);
		    mapear(88,82,5);
		    mapear(98,82,5);
		    mapear(123,82,5);
		    mapear(134,82,5);
		    mapear(168,82,5);
		    mapear(177,82,5);
		    mapear(213,82,7);
		    mapear(223,82,5);
		    mapear(257,82,6);
		    mapear(266,82,7);
		    mapear(303,82,5);
		    mapear(346,82,4);
		    mapear(354,82,6);
		    mapear(393,82,5);
		    mapear(401,82,3);
		    mapear(439,82,5);
		    mapear(448,82,6);
		    mapear(486,82,6);
		    mapear(31,83,9);
		    mapear(76,83,9);
		    mapear(86,83,9);
		    mapear(96,83,9);
		    mapear(121,83,9);
		    mapear(132,83,9);
		    mapear(169,83,12);
	}
	 private void area_12(){
		    mapear(213,83,14);
		    mapear(258,83,15);
		    mapear(301,83,10);
		    mapear(346,83,13);
		    mapear(394,83,9);
		    mapear(439,83,9);
		    mapear(449,83,7);
		    mapear(486,83,5);
		    mapear(31,84,9);
		    mapear(76,84,9);
		    mapear(86,84,9);
		    mapear(96,84,9);
		    mapear(121,84,9);
		    mapear(132,84,9);
		    mapear(171,84,8);
		    mapear(213,84,5);
		    mapear(220,84,6);
		    mapear(260,84,6);
		    mapear(268,84,5);
		    mapear(301,84,10);
		    mapear(348,84,9);
		    mapear(395,84,7);
		    mapear(441,84,6);
		    mapear(449,84,7);
		    mapear(486,84,5);
		    mapear(213,85,5);
		    mapear(268,85,5);
		    mapear(213,86,5);
		    mapear(268,86,5);
		    mapear(213,87,5);
		    mapear(268,87,5);
		    mapear(213,88,5);
		    mapear(268,88,5);
		    mapear(211,89,9);
		    mapear(266,89,9);
		    mapear(211,90,9);
		    mapear(266,90,9);
		    mapear(220,113,4);
		    mapear(256,113,18);
		    mapear(309,113,8);
		    mapear(346,113,16);
		    mapear(391,113,20);
		    mapear(436,113,20);
		    mapear(489,113,8);
		    mapear(219,114,5);
		    mapear(256,114,20);
		    mapear(306,114,14);
		    mapear(346,114,19);
		    mapear(391,114,20);
		    mapear(436,114,20);
	}
	 private void area_13(){
		    mapear(486,114,15);
		    mapear(219,115,6);
		    mapear(259,115,5);
		    mapear(271,115,6);
		    mapear(305,115,5);
		    mapear(315,115,6);
		    mapear(349,115,5);
		    mapear(360,115,6);
		    mapear(394,115,5);
		    mapear(409,115,2);
		    mapear(439,115,5);
		    mapear(454,115,2);
		    mapear(485,115,5);
		    mapear(496,115,6);
		    mapear(218,116,7);
		    mapear(259,116,5);
		    mapear(272,116,6);
		    mapear(304,116,4);
		    mapear(317,116,4);
		    mapear(349,116,5);
		    mapear(362,116,5);
		    mapear(394,116,5);
		    mapear(409,116,2);
		    mapear(439,116,5);
		    mapear(454,116,2);
		    mapear(484,116,4);
		    mapear(498,116,4);
		    mapear(218,117,7);
		    mapear(259,117,5);
		    mapear(273,117,5);
		    mapear(303,117,4);
		    mapear(318,117,3);
		    mapear(349,117,5);
		    mapear(363,117,5);
		    mapear(394,117,5);
		    mapear(409,117,2);
		    mapear(439,117,5);
		    mapear(454,117,2);
		    mapear(483,117,4);
		    mapear(499,117,3);
		    mapear(218,118,8);
		    mapear(259,118,5);
		    mapear(273,118,5);
		    mapear(302,118,5);
		    mapear(318,118,3);
		    mapear(349,118,5);
		    mapear(364,118,5);
		    mapear(394,118,5);
		    mapear(439,118,5);
		    mapear(482,118,5);
	}
	 private void area_14(){
		    mapear(499,118,3);
		    mapear(217,119,2);
		    mapear(221,119,5);
		    mapear(259,119,5);
		    mapear(273,119,5);
		    mapear(302,119,5);
		    mapear(319,119,2);
		    mapear(349,119,5);
		    mapear(364,119,5);
		    mapear(394,119,5);
		    mapear(406,119,2);
		    mapear(439,119,5);
		    mapear(451,119,2);
		    mapear(482,119,5);
		    mapear(500,119,2);
		    mapear(30,120,9);
		    mapear(43,120,4);
		    mapear(52,120,5);
		    mapear(75,120,9);
		    mapear(86,120,6);
		    mapear(120,120,10);
		    mapear(134,120,5);
		    mapear(166,120,15);
		    mapear(217,120,2);
		    mapear(221,120,6);
		    mapear(259,120,5);
		    mapear(272,120,6);
		    mapear(301,120,5);
		    mapear(319,120,2);
		    mapear(349,120,5);
		    mapear(365,120,5);
		    mapear(394,120,5);
		    mapear(406,120,2);
		    mapear(439,120,5);
		    mapear(451,120,2);
		    mapear(481,120,5);
		    mapear(500,120,2);
		    mapear(30,121,9);
		    mapear(43,121,4);
		    mapear(52,121,5);
		    mapear(75,121,9);
		    mapear(86,121,6);
		    mapear(120,121,10);
		    mapear(134,121,5);
		    mapear(166,121,15);
		    mapear(216,121,3);
		    mapear(222,121,5);
		    mapear(259,121,5);
		    mapear(271,121,6);
		    mapear(301,121,5);
	}
	 private void area_15(){
		    mapear(349,121,5);
		    mapear(365,121,5);
		    mapear(394,121,5);
		    mapear(406,121,2);
		    mapear(439,121,5);
		    mapear(451,121,2);
		    mapear(481,121,5);
		    mapear(32,122,5);
		    mapear(42,122,5);
		    mapear(53,122,2);
		    mapear(77,122,7);
		    mapear(87,122,3);
		    mapear(122,122,6);
		    mapear(135,122,2);
		    mapear(166,122,2);
		    mapear(174,122,6);
		    mapear(216,122,2);
		    mapear(222,122,5);
		    mapear(259,122,16);
		    mapear(301,122,5);
		    mapear(349,122,5);
		    mapear(365,122,5);
		    mapear(394,122,14);
		    mapear(439,122,14);
		    mapear(481,122,5);
		    mapear(32,123,5);
		    mapear(42,123,6);
		    mapear(52,123,3);
		    mapear(78,123,6);
		    mapear(87,123,2);
		    mapear(123,123,5);
		    mapear(134,123,2);
		    mapear(166,123,2);
		    mapear(173,123,7);
		    mapear(216,123,2);
		    mapear(222,123,6);
		    mapear(259,123,17);
		    mapear(301,123,5);
		    mapear(349,123,5);
		    mapear(365,123,5);
		    mapear(394,123,14);
		    mapear(439,123,14);
		    mapear(481,123,5);
		    mapear(32,124,6);
		    mapear(42,124,6);
		    mapear(52,124,2);
		    mapear(79,124,6);
		    mapear(86,124,2);
		    mapear(123,124,6);
		    mapear(134,124,2);
	}
	 private void area_16(){
		    mapear(166,124,2);
		    mapear(172,124,7);
		    mapear(215,124,2);
		    mapear(223,124,5);
		    mapear(259,124,5);
		    mapear(271,124,6);
		    mapear(301,124,5);
		    mapear(349,124,5);
		    mapear(365,124,5);
		    mapear(394,124,5);
		    mapear(406,124,2);
		    mapear(439,124,5);
		    mapear(451,124,2);
		    mapear(481,124,5);
		    mapear(33,125,5);
		    mapear(41,125,7);
		    mapear(52,125,2);
		    mapear(80,125,8);
		    mapear(124,125,5);
		    mapear(133,125,3);
		    mapear(172,125,6);
		    mapear(215,125,2);
		    mapear(223,125,6);
		    mapear(259,125,5);
		    mapear(273,125,5);
		    mapear(301,125,5);
		    mapear(349,125,5);
		    mapear(365,125,5);
		    mapear(394,125,5);
		    mapear(406,125,2);
		    mapear(439,125,5);
		    mapear(451,125,2);
		    mapear(481,125,5);
		    mapear(495,125,8);
		    mapear(33,126,5);
		    mapear(41,126,2);
		    mapear(44,126,5);
		    mapear(51,126,2);
		    mapear(80,126,7);
		    mapear(124,126,6);
		    mapear(133,126,2);
		    mapear(171,126,6);
		    mapear(214,126,2);
		    mapear(224,126,5);
		    mapear(259,126,5);
		    mapear(274,126,5);
		    mapear(301,126,5);
		    mapear(349,126,5);
		    mapear(365,126,5);
		    mapear(394,126,5);
	}
	 private void area_17(){
		    mapear(406,126,2);
		    mapear(439,126,5);
		    mapear(451,126,2);
		    mapear(481,126,5);
		    mapear(495,126,8);
		    mapear(34,127,5);
		    mapear(41,127,2);
		    mapear(44,127,5);
		    mapear(51,127,2);
		    mapear(81,127,6);
		    mapear(125,127,5);
		    mapear(132,127,3);
		    mapear(170,127,7);
		    mapear(214,127,16);
		    mapear(259,127,5);
		    mapear(274,127,5);
		    mapear(301,127,5);
		    mapear(349,127,5);
		    mapear(365,127,5);
		    mapear(394,127,5);
		    mapear(439,127,5);
		    mapear(481,127,5);
		    mapear(498,127,5);
		    mapear(34,128,5);
		    mapear(40,128,2);
		    mapear(44,128,6);
		    mapear(51,128,2);
		    mapear(81,128,6);
		    mapear(125,128,6);
		    mapear(132,128,2);
		    mapear(170,128,6);
		    mapear(213,128,17);
		    mapear(259,128,5);
		    mapear(274,128,5);
		    mapear(302,128,5);
		    mapear(319,128,3);
		    mapear(349,128,5);
		    mapear(364,128,5);
		    mapear(394,128,5);
		    mapear(439,128,5);
		    mapear(482,128,5);
		    mapear(498,128,5);
		    mapear(34,129,8);
		    mapear(45,129,7);
		    mapear(80,129,8);
		    mapear(126,129,5);
		    mapear(132,129,2);
		    mapear(169,129,6);
		    mapear(213,129,2);
		    mapear(225,129,5);
	}
	 private void area_18(){
		    mapear(259,129,5);
		    mapear(274,129,5);
		    mapear(302,129,5);
		    mapear(318,129,4);
		    mapear(349,129,5);
		    mapear(364,129,5);
		    mapear(394,129,5);
		    mapear(439,129,5);
		    mapear(482,129,5);
		    mapear(498,129,5);
		    mapear(35,130,7);
		    mapear(45,130,7);
		    mapear(79,130,3);
		    mapear(83,130,6);
		    mapear(126,130,7);
		    mapear(168,130,6);
		    mapear(179,130,2);
		    mapear(213,130,2);
		    mapear(225,130,6);
		    mapear(259,130,5);
		    mapear(274,130,5);
		    mapear(303,130,4);
		    mapear(318,130,3);
		    mapear(349,130,5);
		    mapear(363,130,5);
		    mapear(394,130,5);
		    mapear(409,130,2);
		    mapear(439,130,5);
		    mapear(483,130,4);
		    mapear(498,130,5);
		    mapear(35,131,6);
		    mapear(45,131,7);
		    mapear(78,131,3);
		    mapear(83,131,7);
		    mapear(127,131,6);
		    mapear(167,131,7);
		    mapear(179,131,2);
		    mapear(212,131,2);
		    mapear(226,131,5);
		    mapear(259,131,5);
		    mapear(273,131,5);
		    mapear(304,131,4);
		    mapear(317,131,4);
		    mapear(349,131,5);
		    mapear(362,131,5);
		    mapear(394,131,5);
		    mapear(409,131,2);
		    mapear(439,131,5);
		    mapear(484,131,4);
		    mapear(498,131,5);
	}
	 private void area_19(){
		    mapear(35,132,6);
		    mapear(46,132,5);
		    mapear(78,132,2);
		    mapear(84,132,7);
		    mapear(127,132,6);
		    mapear(167,132,6);
		    mapear(179,132,2);
		    mapear(212,132,2);
		    mapear(226,132,6);
		    mapear(259,132,5);
		    mapear(271,132,7);
		    mapear(305,132,5);
		    mapear(316,132,4);
		    mapear(349,132,5);
		    mapear(360,132,6);
		    mapear(394,132,5);
		    mapear(409,132,2);
		    mapear(439,132,5);
		    mapear(485,132,5);
		    mapear(498,132,5);
		    mapear(36,133,5);
		    mapear(46,133,5);
		    mapear(75,133,7);
		    mapear(83,133,10);
		    mapear(128,133,4);
		    mapear(166,133,15);
		    mapear(210,133,6);
		    mapear(225,133,9);
		    mapear(256,133,20);
		    mapear(306,133,13);
		    mapear(346,133,19);
		    mapear(391,133,20);
		    mapear(436,133,11);
		    mapear(486,133,16);
		    mapear(36,134,4);
		    mapear(46,134,5);
		    mapear(75,134,7);
		    mapear(83,134,10);
		    mapear(128,134,4);
		    mapear(166,134,15);
		    mapear(210,134,6);
		    mapear(225,134,9);
		    mapear(256,134,18);
		    mapear(309,134,7);
		    mapear(346,134,16);
		    mapear(391,134,20);
		    mapear(436,134,11);
		    mapear(489,134,9);
		    mapear(129,135,2);
		    mapear(129,136,2);
	}
	 private void area_20(){
		    mapear(122,137,2);
		    mapear(128,137,2);
		    mapear(122,138,3);
		    mapear(128,138,2);
		    mapear(122,139,7);
		    mapear(123,140,5);
		    mapear(31,163,11);
		    mapear(46,163,11);
		    mapear(76,163,11);
		    mapear(121,163,11);
		    mapear(166,163,11);
		    mapear(181,163,9);
		    mapear(211,163,11);
		    mapear(256,163,10);
		    mapear(278,163,9);
		    mapear(301,163,7);
		    mapear(318,163,8);
		    mapear(354,163,8);
		    mapear(391,163,16);
		    mapear(444,163,8);
		    mapear(481,163,17);
		    mapear(31,164,11);
		    mapear(46,164,11);
		    mapear(76,164,11);
		    mapear(121,164,11);
		    mapear(166,164,11);
		    mapear(181,164,9);
		    mapear(211,164,11);
		    mapear(256,164,10);
		    mapear(278,164,9);
		    mapear(301,164,8);
		    mapear(318,164,8);
		    mapear(351,164,14);
		    mapear(391,164,18);
		    mapear(441,164,14);
		    mapear(481,164,19);
		    mapear(34,165,5);
		    mapear(49,165,5);
		    mapear(79,165,5);
		    mapear(124,165,5);
		    mapear(169,165,5);
		    mapear(183,165,3);
		    mapear(214,165,5);
		    mapear(259,165,8);
		    mapear(277,165,7);
		    mapear(304,165,6);
		    mapear(321,165,2);
		    mapear(350,165,5);
		    mapear(361,165,5);
		    mapear(394,165,5);
	}
	 private void area_21(){
		    mapear(404,165,7);
		    mapear(440,165,5);
		    mapear(451,165,5);
		    mapear(484,165,5);
		    mapear(494,165,7);
		    mapear(34,166,5);
		    mapear(49,166,5);
		    mapear(79,166,5);
		    mapear(124,166,5);
		    mapear(169,166,5);
		    mapear(182,166,3);
		    mapear(214,166,5);
		    mapear(259,166,2);
		    mapear(262,166,5);
		    mapear(277,166,7);
		    mapear(304,166,6);
		    mapear(321,166,2);
		    mapear(349,166,4);
		    mapear(363,166,4);
		    mapear(394,166,5);
		    mapear(406,166,5);
		    mapear(439,166,4);
		    mapear(453,166,4);
		    mapear(484,166,5);
		    mapear(496,166,6);
		    mapear(34,167,5);
		    mapear(49,167,5);
		    mapear(79,167,5);
		    mapear(124,167,5);
		    mapear(169,167,5);
		    mapear(181,167,3);
		    mapear(214,167,5);
		    mapear(259,167,2);
		    mapear(262,167,5);
		    mapear(276,167,8);
		    mapear(304,167,7);
		    mapear(321,167,2);
		    mapear(348,167,5);
		    mapear(363,167,5);
		    mapear(394,167,5);
		    mapear(406,167,6);
		    mapear(438,167,5);
		    mapear(453,167,5);
		    mapear(484,167,5);
		    mapear(497,167,5);
		    mapear(34,168,5);
		    mapear(49,168,5);
		    mapear(79,168,5);
		    mapear(124,168,5);
		    mapear(169,168,5);
	}
	 private void area_22(){
		    mapear(179,168,3);
		    mapear(214,168,5);
		    mapear(259,168,2);
		    mapear(262,168,6);
		    mapear(276,168,2);
		    mapear(279,168,5);
		    mapear(304,168,8);
		    mapear(321,168,2);
		    mapear(347,168,5);
		    mapear(364,168,5);
		    mapear(394,168,5);
		    mapear(407,168,5);
		    mapear(437,168,5);
		    mapear(454,168,5);
		    mapear(484,168,5);
		    mapear(497,168,5);
		    mapear(34,169,5);
		    mapear(49,169,5);
		    mapear(79,169,5);
		    mapear(124,169,5);
		    mapear(169,169,5);
		    mapear(178,169,3);
		    mapear(214,169,5);
		    mapear(259,169,2);
		    mapear(263,169,5);
		    mapear(275,169,3);
		    mapear(279,169,5);
		    mapear(304,169,9);
		    mapear(321,169,2);
		    mapear(347,169,5);
		    mapear(364,169,5);
		    mapear(394,169,5);
		    mapear(407,169,5);
		    mapear(437,169,5);
		    mapear(454,169,5);
		    mapear(484,169,5);
		    mapear(497,169,5);
		    mapear(34,170,5);
		    mapear(49,170,5);
		    mapear(79,170,5);
		    mapear(124,170,5);
		    mapear(169,170,5);
		    mapear(177,170,3);
		    mapear(214,170,5);
		    mapear(259,170,2);
		    mapear(263,170,6);
		    mapear(275,170,2);
		    mapear(279,170,5);
		    mapear(304,170,2);
		    mapear(307,170,7);
	}
	 private void area_23(){
		    mapear(321,170,2);
		    mapear(346,170,5);
		    mapear(365,170,5);
		    mapear(394,170,5);
		    mapear(407,170,5);
		    mapear(436,170,5);
		    mapear(455,170,5);
		    mapear(484,170,5);
		    mapear(497,170,5);
		    mapear(34,171,5);
		    mapear(49,171,5);
		    mapear(79,171,5);
		    mapear(124,171,5);
		    mapear(169,171,5);
		    mapear(176,171,3);
		    mapear(214,171,5);
		    mapear(259,171,2);
		    mapear(264,171,5);
		    mapear(275,171,2);
		    mapear(279,171,5);
		    mapear(304,171,2);
		    mapear(308,171,7);
		    mapear(321,171,2);
		    mapear(346,171,5);
		    mapear(365,171,5);
		    mapear(394,171,5);
		    mapear(406,171,6);
		    mapear(436,171,5);
		    mapear(455,171,5);
		    mapear(484,171,5);
		    mapear(496,171,5);
		    mapear(34,172,20);
		    mapear(79,172,5);
		    mapear(124,172,5);
		    mapear(169,172,10);
		    mapear(214,172,5);
		    mapear(259,172,2);
		    mapear(264,172,6);
		    mapear(274,172,2);
		    mapear(279,172,5);
		    mapear(304,172,2);
		    mapear(309,172,7);
		    mapear(321,172,2);
		    mapear(346,172,5);
		    mapear(365,172,5);
		    mapear(394,172,5);
		    mapear(406,172,5);
		    mapear(436,172,5);
		    mapear(455,172,5);
		    mapear(484,172,5);
	}
	 private void area_24(){
		    mapear(494,172,7);
		    mapear(34,173,20);
		    mapear(79,173,5);
		    mapear(124,173,5);
		    mapear(169,173,11);
		    mapear(214,173,5);
		    mapear(259,173,2);
		    mapear(265,173,5);
		    mapear(274,173,2);
		    mapear(279,173,5);
		    mapear(304,173,2);
		    mapear(310,173,7);
		    mapear(321,173,2);
		    mapear(346,173,5);
		    mapear(365,173,5);
		    mapear(394,173,5);
		    mapear(404,173,7);
		    mapear(436,173,5);
		    mapear(455,173,5);
		    mapear(484,173,15);
		    mapear(34,174,5);
		    mapear(49,174,5);
		    mapear(79,174,5);
		    mapear(124,174,5);
		    mapear(169,174,12);
		    mapear(214,174,5);
		    mapear(259,174,2);
		    mapear(265,174,6);
		    mapear(273,174,2);
		    mapear(279,174,5);
		    mapear(304,174,2);
		    mapear(311,174,6);
		    mapear(321,174,2);
		    mapear(346,174,5);
		    mapear(365,174,5);
		    mapear(394,174,15);
		    mapear(436,174,5);
		    mapear(455,174,5);
		    mapear(484,174,14);
		    mapear(34,175,5);
		    mapear(49,175,5);
		    mapear(79,175,5);
		    mapear(124,175,5);
		    mapear(169,175,5);
		    mapear(175,175,7);
		    mapear(214,175,5);
		    mapear(259,175,2);
		    mapear(266,175,5);
		    mapear(273,175,2);
		    mapear(279,175,5);
	}
	 private void area_25(){
		    mapear(304,175,2);
		    mapear(312,175,6);
		    mapear(321,175,2);
		    mapear(346,175,5);
		    mapear(365,175,5);
		    mapear(394,175,13);
		    mapear(436,175,5);
		    mapear(455,175,5);
		    mapear(484,175,5);
		    mapear(493,175,6);
		    mapear(34,176,5);
		    mapear(49,176,5);
		    mapear(79,176,5);
		    mapear(124,176,5);
		    mapear(169,176,5);
		    mapear(176,176,7);
		    mapear(214,176,5);
		    mapear(259,176,2);
		    mapear(266,176,5);
		    mapear(272,176,2);
		    mapear(279,176,5);
		    mapear(304,176,2);
		    mapear(312,176,7);
		    mapear(321,176,2);
		    mapear(346,176,5);
		    mapear(365,176,5);
		    mapear(394,176,5);
		    mapear(436,176,5);
		    mapear(455,176,5);
		    mapear(484,176,5);
		    mapear(494,176,6);
		    mapear(34,177,5);
		    mapear(49,177,5);
		    mapear(79,177,5);
		    mapear(124,177,5);
		    mapear(169,177,5);
		    mapear(177,177,7);
		    mapear(214,177,5);
		    mapear(259,177,2);
		    mapear(266,177,8);
		    mapear(279,177,5);
		    mapear(304,177,2);
		    mapear(313,177,7);
		    mapear(321,177,2);
		    mapear(346,177,5);
		    mapear(365,177,5);
		    mapear(394,177,5);
		    mapear(436,177,5);
		    mapear(455,177,5);
		    mapear(484,177,5);
	}
	 private void area_26(){
		    mapear(495,177,5);
		    mapear(34,178,5);
		    mapear(49,178,5);
		    mapear(79,178,5);
		    mapear(124,178,5);
		    mapear(169,178,5);
		    mapear(178,178,7);
		    mapear(214,178,5);
		    mapear(259,178,2);
		    mapear(267,178,7);
		    mapear(279,178,5);
		    mapear(304,178,2);
		    mapear(314,178,9);
		    mapear(347,178,5);
		    mapear(364,178,5);
		    mapear(394,178,5);
		    mapear(437,178,5);
		    mapear(454,178,5);
		    mapear(484,178,5);
		    mapear(495,178,6);
		    mapear(34,179,5);
		    mapear(49,179,5);
		    mapear(79,179,5);
		    mapear(124,179,5);
		    mapear(169,179,5);
		    mapear(179,179,7);
		    mapear(214,179,5);
		    mapear(259,179,2);
		    mapear(267,179,6);
		    mapear(279,179,5);
		    mapear(304,179,2);
		    mapear(315,179,8);
		    mapear(347,179,5);
		    mapear(364,179,5);
		    mapear(394,179,5);
		    mapear(437,179,5);
		    mapear(454,179,5);
		    mapear(484,179,5);
		    mapear(496,179,5);
		    mapear(34,180,5);
		    mapear(49,180,5);
		    mapear(79,180,5);
		    mapear(124,180,5);
		    mapear(169,180,5);
		    mapear(180,180,7);
		    mapear(214,180,5);
		    mapear(228,180,2);
		    mapear(259,180,2);
		    mapear(268,180,5);
		    mapear(279,180,5);
	}
	 private void area_27(){
		    mapear(304,180,2);
		    mapear(316,180,7);
		    mapear(348,180,5);
		    mapear(363,180,5);
		    mapear(394,180,5);
		    mapear(438,180,5);
		    mapear(453,180,5);
		    mapear(484,180,5);
		    mapear(496,180,6);
		    mapear(34,181,5);
		    mapear(49,181,5);
		    mapear(79,181,5);
		    mapear(124,181,5);
		    mapear(169,181,5);
		    mapear(181,181,7);
		    mapear(214,181,5);
		    mapear(228,181,2);
		    mapear(259,181,2);
		    mapear(268,181,4);
		    mapear(279,181,5);
		    mapear(304,181,2);
		    mapear(317,181,6);
		    mapear(349,181,4);
		    mapear(363,181,4);
		    mapear(394,181,5);
		    mapear(439,181,4);
		    mapear(453,181,5);
		    mapear(484,181,5);
		    mapear(497,181,5);
		    mapear(34,182,5);
		    mapear(49,182,5);
		    mapear(79,182,5);
		    mapear(124,182,5);
		    mapear(169,182,5);
		    mapear(182,182,7);
		    mapear(214,182,5);
		    mapear(228,182,2);
		    mapear(259,182,2);
		    mapear(279,182,5);
		    mapear(304,182,2);
		    mapear(318,182,5);
		    mapear(350,182,5);
		    mapear(361,182,5);
		    mapear(394,182,5);
		    mapear(440,182,5);
		    mapear(451,182,6);
		    mapear(484,182,5);
		    mapear(497,182,6);
		    mapear(31,183,11);
		    mapear(46,183,11);
	}
	 private void area_28(){
		    mapear(76,183,11);
		    mapear(124,183,5);
		    mapear(166,183,11);
		    mapear(183,183,9);
		    mapear(211,183,19);
		    mapear(256,183,8);
		    mapear(276,183,11);
		    mapear(301,183,8);
		    mapear(319,183,4);
		    mapear(351,183,14);
		    mapear(391,183,12);
		    mapear(441,183,14);
		    mapear(481,183,11);
		    mapear(498,183,7);
		    mapear(31,184,11);
		    mapear(46,184,11);
		    mapear(76,184,11);
		    mapear(124,184,5);
		    mapear(166,184,11);
		    mapear(184,184,8);
		    mapear(211,184,19);
		    mapear(256,184,8);
		    mapear(276,184,11);
		    mapear(301,184,8);
		    mapear(320,184,3);
		    mapear(354,184,8);
		    mapear(391,184,12);
		    mapear(444,184,8);
		    mapear(481,184,11);
		    mapear(498,184,7);
		    mapear(124,185,5);
		    mapear(448,185,5);
		    mapear(117,186,2);
		    mapear(124,186,5);
		    mapear(449,186,8);
		    mapear(117,187,2);
		    mapear(124,187,4);
		    mapear(450,187,7);
		    mapear(117,188,3);
		    mapear(123,188,5);
		    mapear(451,188,6);
		    mapear(117,189,10);
		    mapear(453,189,4);
		    mapear(118,190,7);
		    mapear(36,213,9);
		    mapear(75,213,21);
		    mapear(121,213,11);
		    mapear(138,213,8);
		    mapear(165,213,10);
		    mapear(183,213,6);
	}
	 private void area_29(){
		    mapear(210,213,9);
		    mapear(226,213,5);
		    mapear(237,213,7);
		    mapear(255,213,10);
		    mapear(269,213,8);
		    mapear(300,213,10);
		    mapear(314,213,7);
		    mapear(347,213,19);
		    mapear(442,213,6);
		    mapear(488,213,5);
		    mapear(34,214,14);
		    mapear(75,214,21);
		    mapear(121,214,11);
		    mapear(138,214,8);
		    mapear(165,214,10);
		    mapear(183,214,6);
		    mapear(210,214,9);
		    mapear(226,214,5);
		    mapear(237,214,7);
		    mapear(255,214,10);
		    mapear(269,214,8);
		    mapear(300,214,10);
		    mapear(314,214,7);
		    mapear(347,214,19);
		    mapear(440,214,10);
		    mapear(486,214,7);
		    mapear(32,215,5);
		    mapear(43,215,5);
		    mapear(75,215,2);
		    mapear(83,215,5);
		    mapear(94,215,2);
		    mapear(124,215,5);
		    mapear(141,215,2);
		    mapear(167,215,6);
		    mapear(185,215,2);
		    mapear(212,215,5);
		    mapear(226,215,6);
		    mapear(239,215,3);
		    mapear(257,215,6);
		    mapear(271,215,3);
		    mapear(302,215,6);
		    mapear(316,215,3);
		    mapear(347,215,2);
		    mapear(359,215,7);
		    mapear(439,215,4);
		    mapear(447,215,4);
		    mapear(484,215,9);
		    mapear(32,216,4);
		    mapear(45,216,3);
		    mapear(75,216,2);
	}
	 private void area_30(){
		    mapear(83,216,5);
		    mapear(94,216,2);
		    mapear(124,216,5);
		    mapear(141,216,2);
		    mapear(168,216,5);
		    mapear(184,216,3);
		    mapear(212,216,6);
		    mapear(226,216,6);
		    mapear(239,216,2);
		    mapear(258,216,6);
		    mapear(271,216,2);
		    mapear(303,216,5);
		    mapear(316,216,2);
		    mapear(347,216,2);
		    mapear(359,216,6);
		    mapear(438,216,4);
		    mapear(448,216,4);
		    mapear(483,216,3);
		    mapear(488,216,5);
		    mapear(31,217,5);
		    mapear(45,217,3);
		    mapear(75,217,2);
		    mapear(83,217,5);
		    mapear(94,217,2);
		    mapear(124,217,5);
		    mapear(141,217,2);
		    mapear(168,217,5);
		    mapear(184,217,2);
		    mapear(213,217,5);
		    mapear(225,217,7);
		    mapear(239,217,2);
		    mapear(259,217,6);
		    mapear(270,217,2);
		    mapear(303,217,6);
		    mapear(315,217,3);
		    mapear(347,217,2);
		    mapear(358,217,6);
		    mapear(437,217,4);
		    mapear(448,217,5);
		    mapear(483,217,2);
		    mapear(488,217,5);
		    mapear(31,218,5);
		    mapear(46,218,2);
		    mapear(83,218,5);
		    mapear(124,218,5);
		    mapear(141,218,2);
		    mapear(168,218,6);
		    mapear(184,218,2);
		    mapear(213,218,5);
		    mapear(225,218,7);
	}
	 private void area_31(){
		    mapear(239,218,2);
		    mapear(259,218,7);
		    mapear(269,218,3);
		    mapear(304,218,6);
		    mapear(315,218,2);
		    mapear(357,218,6);
		    mapear(437,218,4);
		    mapear(449,218,4);
		    mapear(488,218,5);
		    mapear(31,219,6);
		    mapear(83,219,5);
		    mapear(124,219,5);
		    mapear(141,219,2);
		    mapear(169,219,5);
		    mapear(183,219,2);
		    mapear(213,219,5);
		    mapear(225,219,2);
		    mapear(228,219,5);
		    mapear(238,219,2);
		    mapear(260,219,6);
		    mapear(269,219,2);
		    mapear(304,219,6);
		    mapear(314,219,2);
		    mapear(356,219,7);
		    mapear(437,219,4);
		    mapear(449,219,4);
		    mapear(488,219,5);
		    mapear(31,220,7);
		    mapear(83,220,5);
		    mapear(124,220,5);
		    mapear(141,220,2);
		    mapear(169,220,6);
		    mapear(183,220,2);
		    mapear(214,220,5);
		    mapear(224,220,2);
		    mapear(228,220,5);
		    mapear(238,220,2);
		    mapear(261,220,6);
		    mapear(268,220,2);
		    mapear(305,220,6);
		    mapear(313,220,3);
		    mapear(356,220,6);
		    mapear(436,220,5);
		    mapear(449,220,5);
		    mapear(488,220,5);
		    mapear(31,221,11);
		    mapear(83,221,5);
		    mapear(124,221,5);
		    mapear(141,221,2);
		    mapear(170,221,5);
	}
	 private void area_32(){
		    mapear(182,221,2);
		    mapear(214,221,5);
		    mapear(224,221,2);
		    mapear(228,221,5);
		    mapear(238,221,2);
		    mapear(262,221,8);
		    mapear(306,221,5);
		    mapear(313,221,2);
		    mapear(355,221,6);
		    mapear(436,221,5);
		    mapear(449,221,5);
		    mapear(488,221,5);
		    mapear(32,222,13);
		    mapear(83,222,5);
		    mapear(124,222,5);
		    mapear(141,222,2);
		    mapear(170,222,5);
		    mapear(182,222,2);
		    mapear(214,222,5);
		    mapear(224,222,2);
		    mapear(228,222,6);
		    mapear(237,222,2);
		    mapear(262,222,7);
		    mapear(306,222,9);
		    mapear(354,222,6);
		    mapear(436,222,5);
		    mapear(449,222,5);
		    mapear(488,222,5);
		    mapear(33,223,14);
		    mapear(83,223,5);
		    mapear(124,223,5);
		    mapear(141,223,2);
		    mapear(170,223,6);
		    mapear(181,223,3);
		    mapear(215,223,5);
		    mapear(223,223,3);
		    mapear(229,223,5);
		    mapear(237,223,2);
		    mapear(263,223,6);
		    mapear(307,223,7);
		    mapear(353,223,7);
		    mapear(436,223,5);
		    mapear(449,223,5);
		    mapear(488,223,5);
		    mapear(34,224,14);
		    mapear(83,224,5);
		    mapear(124,224,5);
		    mapear(141,224,2);
		    mapear(171,224,5);
		    mapear(181,224,2);
	}
	 private void area_33(){
		    mapear(215,224,5);
		    mapear(223,224,2);
		    mapear(229,224,5);
		    mapear(237,224,2);
		    mapear(264,224,6);
		    mapear(307,224,6);
		    mapear(353,224,6);
		    mapear(436,224,5);
		    mapear(449,224,5);
		    mapear(488,224,5);
		    mapear(37,225,11);
		    mapear(83,225,5);
		    mapear(124,225,5);
		    mapear(141,225,2);
		    mapear(171,225,6);
		    mapear(181,225,2);
		    mapear(215,225,5);
		    mapear(223,225,2);
		    mapear(229,225,6);
		    mapear(236,225,3);
		    mapear(263,225,8);
		    mapear(308,225,5);
		    mapear(352,225,6);
		    mapear(436,225,5);
		    mapear(449,225,5);
		    mapear(488,225,5);
		    mapear(41,226,8);
		    mapear(83,226,5);
		    mapear(124,226,5);
		    mapear(141,226,2);
		    mapear(172,226,5);
		    mapear(180,226,2);
		    mapear(215,226,6);
		    mapear(222,226,3);
		    mapear(230,226,5);
		    mapear(236,226,2);
		    mapear(263,226,8);
		    mapear(308,226,5);
		    mapear(351,226,6);
		    mapear(436,226,5);
		    mapear(449,226,5);
		    mapear(488,226,5);
		    mapear(43,227,6);
		    mapear(83,227,5);
		    mapear(124,227,5);
		    mapear(141,227,2);
		    mapear(172,227,6);
		    mapear(180,227,2);
		    mapear(216,227,5);
		    mapear(222,227,2);
	}
	 private void area_34(){
		    mapear(230,227,5);
		    mapear(236,227,2);
		    mapear(262,227,2);
		    mapear(266,227,6);
		    mapear(308,227,5);
		    mapear(350,227,6);
		    mapear(436,227,5);
		    mapear(449,227,5);
		    mapear(488,227,5);
		    mapear(31,228,2);
		    mapear(44,228,5);
		    mapear(83,228,5);
		    mapear(124,228,5);
		    mapear(141,228,2);
		    mapear(173,228,5);
		    mapear(179,228,3);
		    mapear(216,228,5);
		    mapear(222,228,2);
		    mapear(230,228,8);
		    mapear(261,228,3);
		    mapear(267,228,6);
		    mapear(308,228,5);
		    mapear(349,228,7);
		    mapear(437,228,4);
		    mapear(449,228,4);
		    mapear(488,228,5);
		    mapear(31,229,2);
		    mapear(44,229,5);
		    mapear(83,229,5);
		    mapear(124,229,5);
		    mapear(141,229,2);
		    mapear(173,229,5);
		    mapear(179,229,2);
		    mapear(216,229,8);
		    mapear(231,229,6);
		    mapear(260,229,3);
		    mapear(267,229,7);
		    mapear(308,229,5);
		    mapear(349,229,6);
		    mapear(437,229,4);
		    mapear(449,229,4);
		    mapear(488,229,5);
		    mapear(31,230,3);
		    mapear(44,230,5);
		    mapear(83,230,5);
		    mapear(125,230,5);
		    mapear(140,230,2);
		    mapear(173,230,8);
		    mapear(217,230,6);
		    mapear(231,230,6);
	}
	 private void area_35(){
		    mapear(260,230,2);
		    mapear(268,230,6);
		    mapear(308,230,5);
		    mapear(348,230,6);
		    mapear(364,230,2);
		    mapear(437,230,4);
		    mapear(448,230,5);
		    mapear(488,230,5);
		    mapear(31,231,4);
		    mapear(43,231,5);
		    mapear(83,231,5);
		    mapear(125,231,5);
		    mapear(140,231,2);
		    mapear(174,231,6);
		    mapear(217,231,6);
		    mapear(231,231,6);
		    mapear(259,231,3);
		    mapear(269,231,6);
		    mapear(308,231,5);
		    mapear(347,231,6);
		    mapear(364,231,2);
		    mapear(438,231,4);
		    mapear(448,231,4);
		    mapear(488,231,5);
		    mapear(31,232,5);
		    mapear(42,232,6);
		    mapear(83,232,5);
		    mapear(126,232,6);
		    mapear(138,232,3);
		    mapear(174,232,6);
		    mapear(217,232,6);
		    mapear(232,232,4);
		    mapear(258,232,3);
		    mapear(269,232,7);
		    mapear(308,232,5);
		    mapear(346,232,7);
		    mapear(364,232,2);
		    mapear(439,232,4);
		    mapear(447,232,4);
		    mapear(488,232,5);
		    mapear(31,233,15);
		    mapear(80,233,11);
		    mapear(127,233,13);
		    mapear(175,233,4);
		    mapear(218,233,4);
		    mapear(232,233,4);
		    mapear(255,233,8);
		    mapear(267,233,11);
		    mapear(305,233,11);
		    mapear(346,233,20);
	}
	 private void area_36(){
		    mapear(440,233,10);
		    mapear(484,233,13);
		    mapear(34,234,10);
		    mapear(80,234,11);
		    mapear(129,234,9);
		    mapear(175,234,4);
		    mapear(218,234,4);
		    mapear(232,234,4);
		    mapear(255,234,8);
		    mapear(267,234,11);
		    mapear(305,234,11);
		    mapear(346,234,20);
		    mapear(442,234,6);
		    mapear(484,234,13);
		    mapear(390,239,15);
		    mapear(390,240,15);
		    mapear(390,241,15);
		    mapear(34,263,9);
		    mapear(78,263,10);
		    mapear(130,263,6);
		    mapear(168,263,13);
		    mapear(217,263,8);
		    mapear(257,263,16);
		    mapear(306,263,8);
		    mapear(351,263,6);
		    mapear(32,264,13);
		    mapear(76,264,14);
		    mapear(129,264,7);
		    mapear(168,264,13);
		    mapear(215,264,12);
		    mapear(257,264,16);
		    mapear(304,264,12);
		    mapear(349,264,10);
		    mapear(32,265,4);
		    mapear(41,265,6);
		    mapear(76,265,4);
		    mapear(85,265,6);
		    mapear(129,265,7);
		    mapear(168,265,13);
		    mapear(214,265,4);
		    mapear(223,265,4);
		    mapear(257,265,16);
		    mapear(303,265,5);
		    mapear(312,265,5);
		    mapear(348,265,5);
		    mapear(356,265,5);
		    mapear(32,266,3);
		    mapear(42,266,5);
		    mapear(76,266,3);
		    mapear(86,266,6);
	}
	 private void area_37(){
		    mapear(128,266,2);
		    mapear(131,266,5);
		    mapear(168,266,13);
		    mapear(213,266,4);
		    mapear(224,266,3);
		    mapear(257,266,16);
		    mapear(302,266,5);
		    mapear(313,266,5);
		    mapear(347,266,5);
		    mapear(357,266,4);
		    mapear(32,267,2);
		    mapear(43,267,5);
		    mapear(76,267,2);
		    mapear(87,267,5);
		    mapear(127,267,3);
		    mapear(131,267,5);
		    mapear(168,267,2);
		    mapear(212,267,5);
		    mapear(225,267,2);
		    mapear(257,267,2);
		    mapear(270,267,3);
		    mapear(302,267,5);
		    mapear(313,267,5);
		    mapear(346,267,5);
		    mapear(358,267,4);
		    mapear(456,267,1);
		    mapear(483,267,1);
		    mapear(32,268,2);
		    mapear(43,268,5);
		    mapear(76,268,2);
		    mapear(87,268,5);
		    mapear(127,268,2);
		    mapear(131,268,5);
		    mapear(168,268,2);
		    mapear(212,268,4);
		    mapear(257,268,2);
		    mapear(269,268,3);
		    mapear(302,268,5);
		    mapear(313,268,5);
		    mapear(346,268,5);
		    mapear(358,268,4);
		    mapear(453,268,4);
		    mapear(483,268,4);
		    mapear(43,269,5);
		    mapear(87,269,5);
		    mapear(126,269,3);
		    mapear(131,269,5);
		    mapear(168,269,2);
		    mapear(212,269,4);
		    mapear(257,269,2);
	}
	 private void area_38(){
		    mapear(269,269,3);
		    mapear(302,269,5);
		    mapear(313,269,5);
		    mapear(346,269,5);
		    mapear(358,269,5);
		    mapear(450,269,7);
		    mapear(483,269,7);
		    mapear(43,270,5);
		    mapear(86,270,6);
		    mapear(125,270,3);
		    mapear(131,270,5);
		    mapear(168,270,2);
		    mapear(172,270,6);
		    mapear(211,270,5);
		    mapear(218,270,6);
		    mapear(268,270,3);
		    mapear(302,270,5);
		    mapear(313,270,5);
		    mapear(346,270,5);
		    mapear(358,270,5);
		    mapear(447,270,10);
		    mapear(483,270,10);
		    mapear(43,271,5);
		    mapear(85,271,6);
		    mapear(125,271,2);
		    mapear(131,271,5);
		    mapear(168,271,12);
		    mapear(211,271,15);
		    mapear(268,271,3);
		    mapear(303,271,5);
		    mapear(312,271,5);
		    mapear(346,271,5);
		    mapear(358,271,5);
		    mapear(444,271,10);
		    mapear(486,271,10);
		    mapear(42,272,5);
		    mapear(82,272,7);
		    mapear(124,272,3);
		    mapear(131,272,5);
		    mapear(168,272,3);
		    mapear(176,272,5);
		    mapear(211,272,7);
		    mapear(221,272,6);
		    mapear(267,272,3);
		    mapear(304,272,12);
		    mapear(346,272,5);
		    mapear(358,272,5);
		    mapear(442,272,9);
		    mapear(489,272,9);
		    mapear(42,273,5);
	}
	 private void area_39(){
		    mapear(82,273,8);
		    mapear(124,273,2);
		    mapear(131,273,5);
		    mapear(168,273,2);
		    mapear(177,273,5);
		    mapear(211,273,6);
		    mapear(222,273,5);
		    mapear(267,273,3);
		    mapear(304,273,12);
		    mapear(346,273,5);
		    mapear(358,273,5);
		    mapear(439,273,9);
		    mapear(492,273,9);
		    mapear(41,274,5);
		    mapear(86,274,6);
		    mapear(123,274,2);
		    mapear(131,274,5);
		    mapear(178,274,4);
		    mapear(211,274,5);
		    mapear(223,274,5);
		    mapear(266,274,3);
		    mapear(303,274,4);
		    mapear(312,274,5);
		    mapear(347,274,5);
		    mapear(357,274,6);
		    mapear(438,274,7);
		    mapear(495,274,7);
		    mapear(40,275,4);
		    mapear(87,275,5);
		    mapear(122,275,3);
		    mapear(131,275,5);
		    mapear(178,275,5);
		    mapear(211,275,5);
		    mapear(223,275,5);
		    mapear(266,275,3);
		    mapear(302,275,5);
		    mapear(313,275,5);
		    mapear(347,275,6);
		    mapear(356,275,7);
		    mapear(392,275,9);
		    mapear(438,275,5);
		    mapear(497,275,5);
		    mapear(39,276,4);
		    mapear(88,276,5);
		    mapear(122,276,2);
		    mapear(131,276,5);
		    mapear(178,276,5);
		    mapear(211,276,5);
		    mapear(223,276,5);
		    mapear(265,276,3);
	}
	 private void area_40(){
		    mapear(301,276,5);
		    mapear(314,276,5);
		    mapear(348,276,15);
		    mapear(392,276,9);
		    mapear(438,276,7);
		    mapear(495,276,7);
		    mapear(37,277,4);
		    mapear(88,277,5);
		    mapear(121,277,19);
		    mapear(178,277,5);
		    mapear(211,277,5);
		    mapear(223,277,5);
		    mapear(265,277,3);
		    mapear(301,277,5);
		    mapear(314,277,5);
		    mapear(350,277,6);
		    mapear(358,277,5);
		    mapear(392,277,9);
		    mapear(439,277,9);
		    mapear(492,277,9);
		    mapear(36,278,4);
		    mapear(46,278,2);
		    mapear(88,278,5);
		    mapear(121,278,19);
		    mapear(178,278,5);
		    mapear(211,278,5);
		    mapear(223,278,5);
		    mapear(264,278,3);
		    mapear(301,278,5);
		    mapear(314,278,5);
		    mapear(358,278,4);
		    mapear(392,278,9);
		    mapear(442,278,9);
		    mapear(489,278,9);
		    mapear(34,279,4);
		    mapear(46,279,2);
		    mapear(76,279,2);
		    mapear(88,279,5);
		    mapear(131,279,5);
		    mapear(167,279,2);
		    mapear(178,279,5);
		    mapear(212,279,4);
		    mapear(223,279,5);
		    mapear(264,279,3);
		    mapear(301,279,5);
		    mapear(314,279,5);
		    mapear(358,279,4);
		    mapear(445,279,9);
		    mapear(486,279,10);
		    mapear(33,280,3);
	}
	 private void area_41(){
		    mapear(46,280,2);
		    mapear(76,280,2);
		    mapear(88,280,5);
		    mapear(131,280,5);
		    mapear(167,280,2);
		    mapear(178,280,4);
		    mapear(212,280,4);
		    mapear(223,280,5);
		    mapear(263,280,3);
		    mapear(301,280,5);
		    mapear(314,280,5);
		    mapear(347,280,2);
		    mapear(357,280,5);
		    mapear(447,280,10);
		    mapear(483,280,10);
		    mapear(32,281,16);
		    mapear(76,281,3);
		    mapear(87,281,5);
		    mapear(131,281,5);
		    mapear(167,281,3);
		    mapear(177,281,5);
		    mapear(213,281,4);
		    mapear(222,281,5);
		    mapear(263,281,3);
		    mapear(302,281,5);
		    mapear(313,281,5);
		    mapear(347,281,3);
		    mapear(357,281,4);
		    mapear(450,281,7);
		    mapear(483,281,7);
		    mapear(32,282,16);
		    mapear(76,282,4);
		    mapear(86,282,6);
		    mapear(131,282,5);
		    mapear(167,282,4);
		    mapear(176,282,5);
		    mapear(213,282,5);
		    mapear(221,282,5);
		    mapear(262,282,3);
		    mapear(302,282,6);
		    mapear(312,282,6);
		    mapear(347,282,4);
		    mapear(355,282,5);
		    mapear(453,282,4);
		    mapear(483,282,4);
		    mapear(32,283,16);
		    mapear(76,283,14);
		    mapear(128,283,11);
		    mapear(167,283,13);
		    mapear(214,283,11);
	}
	 private void area_42(){
		    mapear(262,283,3);
		    mapear(303,283,14);
		    mapear(347,283,12);
		    mapear(456,283,1);
		    mapear(483,283,1);
		    mapear(32,284,16);
		    mapear(78,284,10);
		    mapear(128,284,11);
		    mapear(169,284,9);
		    mapear(217,284,6);
		    mapear(261,284,3);
		    mapear(306,284,8);
		    mapear(349,284,8);
		    mapear(491,312,1);
		    mapear(218,313,3);
		    mapear(255,313,4);
		    mapear(397,313,2);
		    mapear(489,313,3);
		    mapear(218,314,3);
		    mapear(255,314,4);
		    mapear(397,314,2);
		    mapear(488,314,3);
		    mapear(217,315,3);
		    mapear(256,315,3);
		    mapear(392,315,1);
		    mapear(397,315,2);
		    mapear(403,315,1);
		    mapear(487,315,3);
		    mapear(217,316,3);
		    mapear(256,316,3);
		    mapear(311,316,3);
		    mapear(392,316,2);
		    mapear(397,316,2);
		    mapear(402,316,2);
		    mapear(486,316,4);
		    mapear(217,317,3);
		    mapear(256,317,4);
		    mapear(311,317,3);
		    mapear(391,317,5);
		    mapear(397,317,2);
		    mapear(400,317,5);
		    mapear(485,317,4);
		    mapear(216,318,4);
		    mapear(257,318,3);
		    mapear(311,318,3);
		    mapear(393,318,10);
		    mapear(484,318,5);
		    mapear(216,319,3);
		    mapear(257,319,3);
		    mapear(311,319,3);
	}
	 private void area_43(){
		    mapear(395,319,6);
		    mapear(484,319,5);
		    mapear(124,320,4);
		    mapear(168,320,4);
		    mapear(216,320,3);
		    mapear(257,320,4);
		    mapear(311,320,3);
		    mapear(395,320,6);
		    mapear(484,320,4);
		    mapear(123,321,6);
		    mapear(167,321,6);
		    mapear(215,321,4);
		    mapear(258,321,3);
		    mapear(311,321,3);
		    mapear(393,321,10);
		    mapear(438,321,19);
		    mapear(483,321,5);
		    mapear(123,322,6);
		    mapear(167,322,6);
		    mapear(215,322,3);
		    mapear(258,322,3);
		    mapear(311,322,3);
		    mapear(391,322,5);
		    mapear(397,322,2);
		    mapear(400,322,5);
		    mapear(438,322,19);
		    mapear(483,322,5);
		    mapear(123,323,6);
		    mapear(167,323,6);
		    mapear(215,323,3);
		    mapear(258,323,4);
		    mapear(311,323,3);
		    mapear(392,323,2);
		    mapear(397,323,2);
		    mapear(402,323,2);
		    mapear(438,323,19);
		    mapear(483,323,5);
		    mapear(123,324,6);
		    mapear(167,324,6);
		    mapear(214,324,4);
		    mapear(259,324,3);
		    mapear(303,324,19);
		    mapear(392,324,1);
		    mapear(397,324,2);
		    mapear(403,324,1);
		    mapear(483,324,5);
		    mapear(124,325,4);
		    mapear(168,325,4);
		    mapear(214,325,3);
		    mapear(259,325,3);
	}
	 private void area_44(){
		    mapear(303,325,19);
		    mapear(347,325,9);
		    mapear(397,325,2);
		    mapear(483,325,5);
		    mapear(214,326,3);
		    mapear(259,326,4);
		    mapear(303,326,19);
		    mapear(347,326,9);
		    mapear(397,326,2);
		    mapear(483,326,5);
		    mapear(213,327,4);
		    mapear(260,327,3);
		    mapear(311,327,3);
		    mapear(347,327,9);
		    mapear(438,327,19);
		    mapear(483,327,5);
		    mapear(213,328,3);
		    mapear(260,328,3);
		    mapear(311,328,3);
		    mapear(347,328,9);
		    mapear(438,328,19);
		    mapear(483,328,5);
		    mapear(33,329,4);
		    mapear(124,329,4);
		    mapear(213,329,3);
		    mapear(260,329,4);
		    mapear(311,329,3);
		    mapear(438,329,19);
		    mapear(483,329,5);
		    mapear(32,330,6);
		    mapear(78,330,4);
		    mapear(123,330,6);
		    mapear(169,330,4);
		    mapear(212,330,4);
		    mapear(261,330,3);
		    mapear(311,330,3);
		    mapear(484,330,4);
		    mapear(32,331,6);
		    mapear(78,331,4);
		    mapear(123,331,6);
		    mapear(169,331,4);
		    mapear(212,331,3);
		    mapear(261,331,3);
		    mapear(311,331,3);
		    mapear(484,331,5);
		    mapear(32,332,6);
		    mapear(78,332,4);
		    mapear(123,332,6);
		    mapear(169,332,4);
		    mapear(212,332,3);
	}
	 private void area_45(){
		    mapear(261,332,4);
		    mapear(311,332,3);
		    mapear(484,332,5);
		    mapear(32,333,6);
		    mapear(78,333,4);
		    mapear(123,333,6);
		    mapear(169,333,4);
		    mapear(211,333,4);
		    mapear(262,333,3);
		    mapear(311,333,3);
		    mapear(485,333,4);
		    mapear(33,334,4);
		    mapear(77,334,4);
		    mapear(124,334,4);
		    mapear(168,334,4);
		    mapear(211,334,3);
		    mapear(262,334,3);
		    mapear(311,334,3);
		    mapear(486,334,4);
		    mapear(77,335,4);
		    mapear(168,335,4);
		    mapear(211,335,3);
		    mapear(262,335,3);
		    mapear(487,335,3);
		    mapear(76,336,4);
		    mapear(167,336,4);
		    mapear(210,336,4);
		    mapear(263,336,3);
		    mapear(488,336,3);
		    mapear(76,337,4);
		    mapear(167,337,3);
		    mapear(210,337,4);
		    mapear(263,337,3);
		    mapear(489,337,3);
		    mapear(75,338,4);
		    mapear(166,338,3);
		    mapear(491,338,1);
		    mapear(76,339,1);
		    mapear(167,339,1);
		    mapear(32,362,1);
		    mapear(79,362,8);
		    mapear(122,362,8);
		    mapear(174,362,7);
		    mapear(213,362,7);
		    mapear(400,362,2);
		    mapear(32,363,3);
		    mapear(79,363,8);
		    mapear(122,363,8);
		    mapear(173,363,8);
		    mapear(213,363,8);
	}
	 private void area_46(){
		    mapear(259,363,6);
		    mapear(355,363,3);
		    mapear(362,363,3);
		    mapear(400,363,2);
		    mapear(439,363,6);
		    mapear(455,363,3);
		    mapear(33,364,3);
		    mapear(79,364,5);
		    mapear(125,364,5);
		    mapear(172,364,6);
		    mapear(216,364,6);
		    mapear(259,364,6);
		    mapear(311,364,9);
		    mapear(355,364,3);
		    mapear(362,364,3);
		    mapear(400,364,2);
		    mapear(438,364,8);
		    mapear(454,364,3);
		    mapear(34,365,3);
		    mapear(79,365,5);
		    mapear(125,365,5);
		    mapear(172,365,5);
		    mapear(217,365,5);
		    mapear(259,365,6);
		    mapear(309,365,13);
		    mapear(355,365,3);
		    mapear(362,365,3);
		    mapear(400,365,2);
		    mapear(437,365,4);
		    mapear(443,365,4);
		    mapear(454,365,2);
		    mapear(34,366,4);
		    mapear(79,366,5);
		    mapear(125,366,5);
		    mapear(172,366,5);
		    mapear(217,366,5);
		    mapear(260,366,4);
		    mapear(307,366,5);
		    mapear(319,366,5);
		    mapear(354,366,4);
		    mapear(361,366,4);
		    mapear(397,366,9);
		    mapear(436,366,4);
		    mapear(444,366,4);
		    mapear(453,366,3);
		    mapear(35,367,4);
		    mapear(79,367,5);
		    mapear(125,367,5);
		    mapear(172,367,5);
		    mapear(217,367,5);
	}
	 private void area_47(){
		    mapear(260,367,4);
		    mapear(306,367,4);
		    mapear(322,367,3);
		    mapear(354,367,3);
		    mapear(361,367,3);
		    mapear(395,367,13);
		    mapear(436,367,4);
		    mapear(444,367,4);
		    mapear(453,367,2);
		    mapear(35,368,5);
		    mapear(79,368,5);
		    mapear(125,368,5);
		    mapear(172,368,5);
		    mapear(217,368,5);
		    mapear(260,368,4);
		    mapear(305,368,4);
		    mapear(323,368,3);
		    mapear(354,368,3);
		    mapear(361,368,3);
		    mapear(394,368,4);
		    mapear(400,368,2);
		    mapear(404,368,4);
		    mapear(436,368,4);
		    mapear(444,368,4);
		    mapear(452,368,2);
		    mapear(35,369,5);
		    mapear(79,369,5);
		    mapear(125,369,5);
		    mapear(172,369,5);
		    mapear(217,369,5);
		    mapear(260,369,4);
		    mapear(304,369,4);
		    mapear(324,369,3);
		    mapear(349,369,19);
		    mapear(393,369,4);
		    mapear(400,369,2);
		    mapear(405,369,3);
		    mapear(436,369,4);
		    mapear(444,369,4);
		    mapear(451,369,3);
		    mapear(36,370,4);
		    mapear(79,370,5);
		    mapear(125,370,5);
		    mapear(172,370,5);
		    mapear(217,370,5);
		    mapear(260,370,4);
		    mapear(304,370,3);
		    mapear(325,370,2);
		    mapear(349,370,19);
		    mapear(393,370,4);
	}
	 private void area_48(){
		    mapear(400,370,2);
		    mapear(406,370,2);
		    mapear(436,370,4);
		    mapear(444,370,4);
		    mapear(451,370,2);
		    mapear(486,370,8);
		    mapear(36,371,5);
		    mapear(79,371,5);
		    mapear(125,371,5);
		    mapear(172,371,5);
		    mapear(217,371,5);
		    mapear(260,371,4);
		    mapear(303,371,3);
		    mapear(312,371,4);
		    mapear(318,371,4);
		    mapear(325,371,3);
		    mapear(349,371,19);
		    mapear(393,371,4);
		    mapear(400,371,2);
		    mapear(406,371,2);
		    mapear(436,371,4);
		    mapear(444,371,4);
		    mapear(450,371,2);
		    mapear(484,371,12);
		    mapear(36,372,5);
		    mapear(79,372,5);
		    mapear(125,372,5);
		    mapear(172,372,5);
		    mapear(217,372,5);
		    mapear(261,372,2);
		    mapear(303,372,3);
		    mapear(311,372,6);
		    mapear(318,372,4);
		    mapear(326,372,2);
		    mapear(353,372,3);
		    mapear(360,372,3);
		    mapear(393,372,5);
		    mapear(400,372,2);
		    mapear(437,372,4);
		    mapear(443,372,4);
		    mapear(449,372,3);
		    mapear(483,372,5);
		    mapear(492,372,4);
		    mapear(36,373,5);
		    mapear(79,373,5);
		    mapear(125,373,5);
		    mapear(172,373,5);
		    mapear(217,373,5);
		    mapear(261,373,2);
		    mapear(302,373,3);
	}
	 private void area_49(){
		    mapear(310,373,4);
		    mapear(317,373,5);
		    mapear(326,373,2);
		    mapear(353,373,3);
		    mapear(360,373,3);
		    mapear(393,373,9);
		    mapear(438,373,8);
		    mapear(449,373,2);
		    mapear(454,373,6);
		    mapear(482,373,5);
		    mapear(493,373,3);
		    mapear(36,374,5);
		    mapear(79,374,5);
		    mapear(125,374,5);
		    mapear(171,374,5);
		    mapear(218,374,5);
		    mapear(261,374,2);
		    mapear(302,374,3);
		    mapear(309,374,4);
		    mapear(318,374,4);
		    mapear(326,374,2);
		    mapear(352,374,4);
		    mapear(359,374,4);
		    mapear(394,374,11);
		    mapear(439,374,6);
		    mapear(448,374,2);
		    mapear(453,374,8);
		    mapear(481,374,5);
		    mapear(494,374,2);
		    mapear(36,375,5);
		    mapear(79,375,5);
		    mapear(125,375,5);
		    mapear(167,375,8);
		    mapear(219,375,8);
		    mapear(261,375,2);
		    mapear(302,375,3);
		    mapear(309,375,4);
		    mapear(318,375,4);
		    mapear(326,375,2);
		    mapear(352,375,3);
		    mapear(359,375,3);
		    mapear(395,375,12);
		    mapear(447,375,3);
		    mapear(452,375,4);
		    mapear(458,375,4);
		    mapear(481,375,5);
		    mapear(494,375,2);
		    mapear(36,376,5);
		    mapear(79,376,5);
		    mapear(125,376,5);
	}
	 private void area_50(){
		    mapear(167,376,8);
		    mapear(219,376,8);
		    mapear(261,376,2);
		    mapear(302,376,3);
		    mapear(309,376,4);
		    mapear(318,376,4);
		    mapear(326,376,2);
		    mapear(347,376,19);
		    mapear(397,376,11);
		    mapear(447,376,2);
		    mapear(451,376,4);
		    mapear(459,376,4);
		    mapear(481,376,5);
		    mapear(36,377,5);
		    mapear(79,377,5);
		    mapear(125,377,5);
		    mapear(171,377,5);
		    mapear(218,377,5);
		    mapear(302,377,3);
		    mapear(309,377,4);
		    mapear(318,377,4);
		    mapear(326,377,2);
		    mapear(347,377,19);
		    mapear(400,377,9);
		    mapear(446,377,2);
		    mapear(451,377,4);
		    mapear(459,377,4);
		    mapear(481,377,5);
		    mapear(36,378,5);
		    mapear(79,378,5);
		    mapear(125,378,5);
		    mapear(172,378,5);
		    mapear(217,378,5);
		    mapear(302,378,3);
		    mapear(309,378,4);
		    mapear(318,378,4);
		    mapear(325,378,2);
		    mapear(347,378,19);
		    mapear(400,378,2);
		    mapear(404,378,5);
		    mapear(445,378,3);
		    mapear(451,378,4);
		    mapear(459,378,4);
		    mapear(481,378,5);
		    mapear(36,379,5);
		    mapear(79,379,5);
		    mapear(125,379,5);
		    mapear(172,379,5);
		    mapear(217,379,5);
		    mapear(260,379,4);
	}
	 private void area_51(){
		    mapear(302,379,3);
		    mapear(309,379,4);
		    mapear(318,379,4);
		    mapear(324,379,3);
		    mapear(351,379,3);
		    mapear(358,379,3);
		    mapear(393,379,2);
		    mapear(400,379,2);
		    mapear(405,379,4);
		    mapear(445,379,2);
		    mapear(451,379,4);
		    mapear(459,379,4);
		    mapear(481,379,5);
		    mapear(495,379,2);
		    mapear(36,380,4);
		    mapear(79,380,5);
		    mapear(125,380,5);
		    mapear(172,380,5);
		    mapear(217,380,5);
		    mapear(259,380,6);
		    mapear(302,380,3);
		    mapear(310,380,4);
		    mapear(317,380,5);
		    mapear(323,380,3);
		    mapear(351,380,3);
		    mapear(358,380,3);
		    mapear(393,380,2);
		    mapear(400,380,2);
		    mapear(405,380,4);
		    mapear(444,380,3);
		    mapear(451,380,4);
		    mapear(459,380,4);
		    mapear(481,380,5);
		    mapear(495,380,2);
		    mapear(35,381,5);
		    mapear(79,381,5);
		    mapear(125,381,5);
		    mapear(172,381,5);
		    mapear(217,381,5);
		    mapear(259,381,6);
		    mapear(303,381,3);
		    mapear(311,381,14);
		    mapear(351,381,3);
		    mapear(358,381,3);
		    mapear(393,381,3);
		    mapear(400,381,2);
		    mapear(405,381,4);
		    mapear(443,381,3);
		    mapear(451,381,4);
		    mapear(459,381,4);
	}
	 private void area_52(){
		    mapear(482,381,5);
		    mapear(494,381,2);
		    mapear(35,382,5);
		    mapear(79,382,5);
		    mapear(125,382,5);
		    mapear(172,382,5);
		    mapear(217,382,5);
		    mapear(259,382,6);
		    mapear(303,382,3);
		    mapear(312,382,4);
		    mapear(318,382,4);
		    mapear(350,382,4);
		    mapear(358,382,3);
		    mapear(393,382,4);
		    mapear(400,382,2);
		    mapear(404,382,4);
		    mapear(443,382,2);
		    mapear(452,382,4);
		    mapear(458,382,4);
		    mapear(483,382,5);
		    mapear(493,382,3);
		    mapear(35,383,4);
		    mapear(79,383,5);
		    mapear(125,383,5);
		    mapear(172,383,5);
		    mapear(217,383,5);
		    mapear(259,383,6);
		    mapear(304,383,3);
		    mapear(350,383,3);
		    mapear(357,383,4);
		    mapear(393,383,14);
		    mapear(442,383,3);
		    mapear(453,383,8);
		    mapear(484,383,11);
		    mapear(34,384,4);
		    mapear(79,384,5);
		    mapear(125,384,5);
		    mapear(172,384,5);
		    mapear(217,384,5);
		    mapear(260,384,4);
		    mapear(304,384,4);
		    mapear(350,384,3);
		    mapear(357,384,3);
		    mapear(395,384,10);
		    mapear(441,384,3);
		    mapear(454,384,6);
		    mapear(486,384,7);
		    mapear(34,385,3);
		    mapear(79,385,5);
		    mapear(125,385,5);
	}
	 private void area_53(){
		    mapear(172,385,5);
		    mapear(217,385,5);
		    mapear(305,385,4);
		    mapear(400,385,2);
		    mapear(489,385,2);
		    mapear(33,386,3);
		    mapear(79,386,5);
		    mapear(125,386,5);
		    mapear(172,386,5);
		    mapear(217,386,5);
		    mapear(306,386,4);
		    mapear(322,386,1);
		    mapear(400,386,2);
		    mapear(490,386,2);
		    mapear(32,387,3);
		    mapear(79,387,8);
		    mapear(122,387,8);
		    mapear(172,387,6);
		    mapear(216,387,6);
		    mapear(307,387,5);
		    mapear(320,387,3);
		    mapear(400,387,2);
		    mapear(490,387,2);
		    mapear(32,388,1);
		    mapear(79,388,8);
		    mapear(122,388,8);
		    mapear(173,388,8);
		    mapear(213,388,8);
		    mapear(309,388,12);
		    mapear(400,388,2);
		    mapear(490,388,2);
		    mapear(174,389,7);
		    mapear(213,389,7);
		    mapear(311,389,8);
		    mapear(486,389,6);
		    mapear(486,390,5);
		    mapear(85,411,4);
		    mapear(123,411,4);
		    mapear(171,411,5);
		    mapear(214,411,4);
		    mapear(221,411,2);
		    mapear(259,411,2);
		    mapear(265,411,2);
		    mapear(311,411,4);
		    mapear(349,411,4);
		    mapear(397,411,5);
		    mapear(440,411,4);
		    mapear(447,411,2);
		    mapear(485,411,2);
		    mapear(491,411,2);
	}
	 private void area_54(){
		    mapear(84,412,4);
		    mapear(124,412,4);
		    mapear(171,412,5);
		    mapear(214,412,5);
		    mapear(221,412,2);
		    mapear(258,412,4);
		    mapear(264,412,4);
		    mapear(310,412,4);
		    mapear(350,412,4);
		    mapear(397,412,5);
		    mapear(440,412,5);
		    mapear(447,412,2);
		    mapear(484,412,4);
		    mapear(490,412,4);
		    mapear(39,413,8);
		    mapear(83,413,4);
		    mapear(125,413,4);
		    mapear(170,413,3);
		    mapear(174,413,3);
		    mapear(213,413,10);
		    mapear(258,413,4);
		    mapear(264,413,4);
		    mapear(309,413,4);
		    mapear(351,413,4);
		    mapear(396,413,3);
		    mapear(400,413,3);
		    mapear(439,413,10);
		    mapear(484,413,4);
		    mapear(490,413,4);
		    mapear(36,414,14);
		    mapear(83,414,3);
		    mapear(126,414,3);
		    mapear(170,414,3);
		    mapear(174,414,3);
		    mapear(213,414,2);
		    mapear(217,414,5);
		    mapear(259,414,2);
		    mapear(265,414,2);
		    mapear(309,414,3);
		    mapear(352,414,3);
		    mapear(396,414,3);
		    mapear(400,414,3);
		    mapear(439,414,2);
		    mapear(443,414,5);
		    mapear(485,414,2);
		    mapear(491,414,2);
		    mapear(35,415,5);
		    mapear(45,415,6);
		    mapear(82,415,3);
		    mapear(127,415,3);
	}
	 private void area_55(){
		    mapear(169,415,3);
		    mapear(175,415,3);
		    mapear(213,415,2);
		    mapear(218,415,4);
		    mapear(308,415,3);
		    mapear(353,415,3);
		    mapear(395,415,3);
		    mapear(401,415,3);
		    mapear(439,415,2);
		    mapear(444,415,4);
		    mapear(34,416,4);
		    mapear(47,416,4);
		    mapear(81,416,3);
		    mapear(128,416,3);
		    mapear(168,416,3);
		    mapear(176,416,3);
		    mapear(307,416,3);
		    mapear(354,416,3);
		    mapear(394,416,3);
		    mapear(402,416,3);
		    mapear(33,417,4);
		    mapear(48,417,3);
		    mapear(32,418,5);
		    mapear(48,418,3);
		    mapear(32,419,5);
		    mapear(49,419,2);
		    mapear(31,420,5);
		    mapear(49,420,2);
		    mapear(79,420,8);
		    mapear(124,420,8);
		    mapear(169,420,8);
		    mapear(214,420,8);
		    mapear(259,420,8);
		    mapear(306,420,6);
		    mapear(351,420,6);
		    mapear(396,420,6);
		    mapear(441,420,6);
		    mapear(486,420,6);
		    mapear(31,421,5);
		    mapear(77,421,12);
		    mapear(122,421,12);
		    mapear(167,421,12);
		    mapear(212,421,12);
		    mapear(257,421,12);
		    mapear(304,421,10);
		    mapear(349,421,10);
		    mapear(394,421,10);
		    mapear(439,421,10);
		    mapear(484,421,10);
		    mapear(31,422,5);
	}
	 private void area_56(){
		    mapear(77,422,3);
		    mapear(85,422,5);
		    mapear(122,422,3);
		    mapear(130,422,5);
		    mapear(167,422,3);
		    mapear(175,422,5);
		    mapear(212,422,3);
		    mapear(220,422,5);
		    mapear(257,422,3);
		    mapear(265,422,5);
		    mapear(303,422,4);
		    mapear(311,422,4);
		    mapear(348,422,4);
		    mapear(356,422,4);
		    mapear(393,422,4);
		    mapear(401,422,4);
		    mapear(438,422,4);
		    mapear(446,422,4);
		    mapear(483,422,4);
		    mapear(491,422,4);
		    mapear(31,423,5);
		    mapear(77,423,3);
		    mapear(86,423,5);
		    mapear(122,423,3);
		    mapear(131,423,5);
		    mapear(167,423,3);
		    mapear(176,423,5);
		    mapear(212,423,3);
		    mapear(221,423,5);
		    mapear(257,423,3);
		    mapear(266,423,5);
		    mapear(302,423,4);
		    mapear(311,423,5);
		    mapear(347,423,4);
		    mapear(356,423,5);
		    mapear(392,423,4);
		    mapear(401,423,5);
		    mapear(437,423,4);
		    mapear(446,423,5);
		    mapear(482,423,4);
		    mapear(491,423,5);
		    mapear(31,424,5);
		    mapear(77,424,2);
		    mapear(86,424,5);
		    mapear(122,424,2);
		    mapear(131,424,5);
		    mapear(167,424,2);
		    mapear(176,424,5);
		    mapear(212,424,2);
		    mapear(221,424,5);
	}
	 private void area_57(){
		    mapear(257,424,2);
		    mapear(266,424,5);
		    mapear(301,424,5);
		    mapear(312,424,4);
		    mapear(346,424,5);
		    mapear(357,424,4);
		    mapear(391,424,5);
		    mapear(402,424,4);
		    mapear(436,424,5);
		    mapear(447,424,4);
		    mapear(481,424,5);
		    mapear(492,424,4);
		    mapear(31,425,5);
		    mapear(80,425,11);
		    mapear(125,425,11);
		    mapear(170,425,11);
		    mapear(215,425,11);
		    mapear(260,425,11);
		    mapear(301,425,5);
		    mapear(312,425,4);
		    mapear(346,425,5);
		    mapear(357,425,4);
		    mapear(391,425,5);
		    mapear(402,425,4);
		    mapear(436,425,5);
		    mapear(447,425,4);
		    mapear(481,425,5);
		    mapear(492,425,4);
		    mapear(31,426,5);
		    mapear(78,426,13);
		    mapear(123,426,13);
		    mapear(168,426,13);
		    mapear(213,426,13);
		    mapear(258,426,13);
		    mapear(301,426,5);
		    mapear(312,426,5);
		    mapear(346,426,5);
		    mapear(357,426,5);
		    mapear(391,426,5);
		    mapear(402,426,5);
		    mapear(436,426,5);
		    mapear(447,426,5);
		    mapear(481,426,5);
		    mapear(492,426,5);
		    mapear(31,427,5);
		    mapear(77,427,5);
		    mapear(86,427,5);
		    mapear(122,427,5);
		    mapear(131,427,5);
		    mapear(167,427,5);
	}
	 private void area_58(){
		    mapear(176,427,5);
		    mapear(212,427,5);
		    mapear(221,427,5);
		    mapear(257,427,5);
		    mapear(266,427,5);
		    mapear(301,427,16);
		    mapear(346,427,16);
		    mapear(391,427,16);
		    mapear(436,427,16);
		    mapear(481,427,16);
		    mapear(32,428,5);
		    mapear(49,428,3);
		    mapear(76,428,5);
		    mapear(86,428,5);
		    mapear(121,428,5);
		    mapear(131,428,5);
		    mapear(166,428,5);
		    mapear(176,428,5);
		    mapear(211,428,5);
		    mapear(221,428,5);
		    mapear(256,428,5);
		    mapear(266,428,5);
		    mapear(301,428,16);
		    mapear(346,428,16);
		    mapear(391,428,16);
		    mapear(436,428,16);
		    mapear(481,428,16);
		    mapear(32,429,5);
		    mapear(48,429,4);
		    mapear(76,429,5);
		    mapear(86,429,5);
		    mapear(121,429,5);
		    mapear(131,429,5);
		    mapear(166,429,5);
		    mapear(176,429,5);
		    mapear(211,429,5);
		    mapear(221,429,5);
		    mapear(256,429,5);
		    mapear(266,429,5);
		    mapear(301,429,5);
		    mapear(346,429,5);
		    mapear(391,429,5);
		    mapear(436,429,5);
		    mapear(481,429,5);
		    mapear(33,430,4);
		    mapear(48,430,3);
		    mapear(76,430,5);
		    mapear(86,430,5);
		    mapear(121,430,5);
		    mapear(131,430,5);
	}
	 private void area_59(){
		    mapear(166,430,5);
		    mapear(176,430,5);
		    mapear(211,430,5);
		    mapear(221,430,5);
		    mapear(256,430,5);
		    mapear(266,430,5);
		    mapear(301,430,5);
		    mapear(315,430,2);
		    mapear(346,430,5);
		    mapear(360,430,2);
		    mapear(391,430,5);
		    mapear(405,430,2);
		    mapear(436,430,5);
		    mapear(450,430,2);
		    mapear(481,430,5);
		    mapear(495,430,2);
		    mapear(34,431,4);
		    mapear(47,431,4);
		    mapear(76,431,5);
		    mapear(86,431,5);
		    mapear(121,431,5);
		    mapear(131,431,5);
		    mapear(166,431,5);
		    mapear(176,431,5);
		    mapear(211,431,5);
		    mapear(221,431,5);
		    mapear(256,431,5);
		    mapear(266,431,5);
		    mapear(302,431,5);
		    mapear(314,431,2);
		    mapear(347,431,5);
		    mapear(359,431,2);
		    mapear(392,431,5);
		    mapear(404,431,2);
		    mapear(437,431,5);
		    mapear(449,431,2);
		    mapear(482,431,5);
		    mapear(494,431,2);
		    mapear(35,432,5);
		    mapear(46,432,4);
		    mapear(76,432,6);
		    mapear(85,432,6);
		    mapear(121,432,6);
		    mapear(130,432,6);
		    mapear(166,432,6);
		    mapear(175,432,6);
		    mapear(211,432,6);
		    mapear(220,432,6);
		    mapear(256,432,6);
		    mapear(265,432,6);
	}
	 private void area_60(){
		    mapear(303,432,5);
		    mapear(313,432,3);
		    mapear(348,432,5);
		    mapear(358,432,3);
		    mapear(393,432,5);
		    mapear(403,432,3);
		    mapear(438,432,5);
		    mapear(448,432,3);
		    mapear(483,432,5);
		    mapear(493,432,3);
		    mapear(36,433,13);
		    mapear(77,433,8);
		    mapear(86,433,7);
		    mapear(122,433,8);
		    mapear(131,433,7);
		    mapear(167,433,8);
		    mapear(176,433,7);
		    mapear(212,433,8);
		    mapear(221,433,7);
		    mapear(257,433,8);
		    mapear(266,433,7);
		    mapear(304,433,11);
		    mapear(349,433,11);
		    mapear(394,433,11);
		    mapear(439,433,11);
		    mapear(484,433,11);
		    mapear(39,434,7);
		    mapear(78,434,6);
		    mapear(86,434,7);
		    mapear(123,434,6);
		    mapear(131,434,7);
		    mapear(168,434,6);
		    mapear(176,434,7);
		    mapear(213,434,6);
		    mapear(221,434,7);
		    mapear(258,434,6);
		    mapear(266,434,7);
		    mapear(306,434,7);
		    mapear(351,434,7);
		    mapear(396,434,7);
		    mapear(441,434,7);
		    mapear(486,434,7);
		    mapear(42,435,2);
		    mapear(43,436,2);
		    mapear(43,437,2);
		    mapear(43,438,2);
		    mapear(39,439,6);
		    mapear(39,440,5);
		    mapear(37,461,4);
		    mapear(75,461,4);
	}
	 private void area_61(){
		    mapear(123,461,5);
		    mapear(166,461,4);
		    mapear(173,461,2);
		    mapear(211,461,2);
		    mapear(217,461,2);
		    mapear(267,461,4);
		    mapear(305,461,4);
		    mapear(353,461,5);
		    mapear(396,461,4);
		    mapear(403,461,2);
		    mapear(441,461,2);
		    mapear(447,461,2);
		    mapear(492,461,4);
		    mapear(36,462,4);
		    mapear(76,462,4);
		    mapear(123,462,5);
		    mapear(166,462,5);
		    mapear(173,462,2);
		    mapear(210,462,4);
		    mapear(216,462,4);
		    mapear(266,462,4);
		    mapear(306,462,4);
		    mapear(353,462,5);
		    mapear(396,462,5);
		    mapear(403,462,2);
		    mapear(440,462,4);
		    mapear(446,462,4);
		    mapear(491,462,4);
		    mapear(35,463,4);
		    mapear(77,463,4);
		    mapear(122,463,3);
		    mapear(126,463,3);
		    mapear(165,463,10);
		    mapear(210,463,4);
		    mapear(216,463,4);
		    mapear(265,463,4);
		    mapear(307,463,4);
		    mapear(352,463,3);
		    mapear(356,463,3);
		    mapear(395,463,10);
		    mapear(440,463,4);
		    mapear(446,463,4);
		    mapear(490,463,4);
		    mapear(35,464,3);
		    mapear(78,464,3);
		    mapear(122,464,3);
		    mapear(126,464,3);
		    mapear(165,464,2);
		    mapear(169,464,5);
		    mapear(211,464,2);
	}
	 private void area_62(){
		    mapear(217,464,2);
		    mapear(265,464,3);
		    mapear(308,464,3);
		    mapear(352,464,3);
		    mapear(356,464,3);
		    mapear(395,464,2);
		    mapear(399,464,5);
		    mapear(441,464,2);
		    mapear(447,464,2);
		    mapear(490,464,3);
		    mapear(34,465,3);
		    mapear(79,465,3);
		    mapear(121,465,3);
		    mapear(127,465,3);
		    mapear(165,465,2);
		    mapear(170,465,4);
		    mapear(264,465,3);
		    mapear(309,465,3);
		    mapear(351,465,3);
		    mapear(357,465,3);
		    mapear(395,465,2);
		    mapear(400,465,4);
		    mapear(489,465,3);
		    mapear(33,466,3);
		    mapear(80,466,3);
		    mapear(120,466,3);
		    mapear(128,466,3);
		    mapear(263,466,3);
		    mapear(310,466,3);
		    mapear(350,466,3);
		    mapear(358,466,3);
		    mapear(488,466,3);
		    mapear(31,470,7);
		    mapear(76,470,7);
		    mapear(121,470,7);
		    mapear(166,470,7);
		    mapear(211,470,7);
		    mapear(261,470,8);
		    mapear(306,470,8);
		    mapear(351,470,8);
		    mapear(396,470,8);
		    mapear(441,470,8);
		    mapear(481,470,7);
		    mapear(492,470,7);
		    mapear(31,471,7);
		    mapear(76,471,7);
		    mapear(121,471,7);
		    mapear(166,471,7);
		    mapear(211,471,7);
		    mapear(259,471,12);
	}
	 private void area_63(){
		    mapear(304,471,12);
		    mapear(349,471,12);
		    mapear(394,471,12);
		    mapear(439,471,12);
		    mapear(481,471,7);
		    mapear(492,471,7);
		    mapear(33,472,5);
		    mapear(78,472,5);
		    mapear(123,472,5);
		    mapear(168,472,5);
		    mapear(213,472,5);
		    mapear(258,472,5);
		    mapear(267,472,5);
		    mapear(303,472,5);
		    mapear(312,472,5);
		    mapear(348,472,5);
		    mapear(357,472,5);
		    mapear(393,472,5);
		    mapear(402,472,5);
		    mapear(438,472,5);
		    mapear(447,472,5);
		    mapear(483,472,5);
		    mapear(494,472,5);
		    mapear(33,473,5);
		    mapear(78,473,5);
		    mapear(123,473,5);
		    mapear(168,473,5);
		    mapear(213,473,5);
		    mapear(257,473,5);
		    mapear(268,473,5);
		    mapear(302,473,5);
		    mapear(313,473,5);
		    mapear(347,473,5);
		    mapear(358,473,5);
		    mapear(392,473,5);
		    mapear(403,473,5);
		    mapear(437,473,5);
		    mapear(448,473,5);
		    mapear(483,473,5);
		    mapear(494,473,5);
		    mapear(33,474,5);
		    mapear(78,474,5);
		    mapear(123,474,5);
		    mapear(168,474,5);
		    mapear(213,474,5);
		    mapear(257,474,4);
		    mapear(269,474,4);
		    mapear(302,474,4);
		    mapear(314,474,4);
		    mapear(347,474,4);
	}
	 private void area_64(){
		    mapear(359,474,4);
		    mapear(392,474,4);
		    mapear(404,474,4);
		    mapear(437,474,4);
		    mapear(449,474,4);
		    mapear(483,474,5);
		    mapear(494,474,5);
		    mapear(33,475,5);
		    mapear(78,475,5);
		    mapear(123,475,5);
		    mapear(168,475,5);
		    mapear(213,475,5);
		    mapear(256,475,5);
		    mapear(269,475,5);
		    mapear(301,475,5);
		    mapear(314,475,5);
		    mapear(346,475,5);
		    mapear(359,475,5);
		    mapear(391,475,5);
		    mapear(404,475,5);
		    mapear(436,475,5);
		    mapear(449,475,5);
		    mapear(483,475,5);
		    mapear(494,475,5);
		    mapear(33,476,5);
		    mapear(78,476,5);
		    mapear(123,476,5);
		    mapear(168,476,5);
		    mapear(213,476,5);
		    mapear(256,476,5);
		    mapear(269,476,5);
		    mapear(301,476,5);
		    mapear(314,476,5);
		    mapear(346,476,5);
		    mapear(359,476,5);
		    mapear(391,476,5);
		    mapear(404,476,5);
		    mapear(436,476,5);
		    mapear(449,476,5);
		    mapear(483,476,5);
		    mapear(494,476,5);
		    mapear(33,477,5);
		    mapear(78,477,5);
		    mapear(123,477,5);
		    mapear(168,477,5);
		    mapear(213,477,5);
		    mapear(256,477,5);
		    mapear(269,477,5);
		    mapear(301,477,5);
		    mapear(314,477,5);
	}
	 private void area_65(){
		    mapear(346,477,5);
		    mapear(359,477,5);
		    mapear(391,477,5);
		    mapear(404,477,5);
		    mapear(436,477,5);
		    mapear(449,477,5);
		    mapear(483,477,5);
		    mapear(494,477,5);
		    mapear(33,478,5);
		    mapear(78,478,5);
		    mapear(123,478,5);
		    mapear(168,478,5);
		    mapear(213,478,5);
		    mapear(256,478,5);
		    mapear(269,478,5);
		    mapear(301,478,5);
		    mapear(314,478,5);
		    mapear(346,478,5);
		    mapear(359,478,5);
		    mapear(391,478,5);
		    mapear(404,478,5);
		    mapear(436,478,5);
		    mapear(449,478,5);
		    mapear(483,478,5);
		    mapear(494,478,5);
		    mapear(33,479,5);
		    mapear(78,479,5);
		    mapear(123,479,5);
		    mapear(168,479,5);
		    mapear(213,479,5);
		    mapear(256,479,5);
		    mapear(269,479,5);
		    mapear(301,479,5);
		    mapear(314,479,5);
		    mapear(346,479,5);
		    mapear(359,479,5);
		    mapear(391,479,5);
		    mapear(404,479,5);
		    mapear(436,479,5);
		    mapear(449,479,5);
		    mapear(483,479,5);
		    mapear(494,479,5);
		    mapear(33,480,5);
		    mapear(78,480,5);
		    mapear(123,480,5);
		    mapear(168,480,5);
		    mapear(213,480,5);
		    mapear(257,480,4);
		    mapear(269,480,4);
		    mapear(302,480,4);
	}
	 private void area_66(){
		    mapear(314,480,4);
		    mapear(347,480,4);
		    mapear(359,480,4);
		    mapear(392,480,4);
		    mapear(404,480,4);
		    mapear(437,480,4);
		    mapear(449,480,4);
		    mapear(483,480,5);
		    mapear(494,480,5);
		    mapear(33,481,5);
		    mapear(78,481,5);
		    mapear(123,481,5);
		    mapear(168,481,5);
		    mapear(213,481,5);
		    mapear(257,481,5);
		    mapear(268,481,5);
		    mapear(302,481,5);
		    mapear(313,481,5);
		    mapear(347,481,5);
		    mapear(358,481,5);
		    mapear(392,481,5);
		    mapear(403,481,5);
		    mapear(437,481,5);
		    mapear(448,481,5);
		    mapear(483,481,5);
		    mapear(493,481,6);
		    mapear(33,482,5);
		    mapear(78,482,5);
		    mapear(123,482,5);
		    mapear(168,482,5);
		    mapear(213,482,5);
		    mapear(258,482,5);
		    mapear(267,482,5);
		    mapear(303,482,5);
		    mapear(312,482,5);
		    mapear(348,482,5);
		    mapear(357,482,5);
		    mapear(393,482,5);
		    mapear(402,482,5);
		    mapear(438,482,5);
		    mapear(447,482,5);
		    mapear(484,482,5);
		    mapear(493,482,6);
		    mapear(31,483,9);
		    mapear(76,483,9);
		    mapear(121,483,9);
		    mapear(166,483,9);
		    mapear(211,483,9);
		    mapear(259,483,12);
		    mapear(304,483,12);
	}
	 private void area_67(){
		    mapear(349,483,12);
		    mapear(394,483,12);
		    mapear(439,483,12);
		    mapear(484,483,9);
		    mapear(494,483,7);
		    mapear(31,484,9);
		    mapear(76,484,9);
		    mapear(121,484,9);
		    mapear(166,484,9);
		    mapear(211,484,9);
		    mapear(261,484,8);
		    mapear(306,484,8);
		    mapear(351,484,8);
		    mapear(396,484,8);
		    mapear(441,484,8);
		    mapear(486,484,6);
		    mapear(494,484,7);
		    mapear(397,507,2);
		    mapear(403,507,2);
		    mapear(221,508,4);
		    mapear(263,508,4);
		    mapear(309,508,5);
		    mapear(352,508,4);
		    mapear(359,508,2);
		    mapear(396,508,4);
		    mapear(402,508,4);
		    mapear(446,508,4);
		    mapear(488,508,4);
		    mapear(221,509,3);
		    mapear(264,509,3);
		    mapear(308,509,7);
		    mapear(351,509,10);
		    mapear(396,509,4);
		    mapear(402,509,4);
		    mapear(446,509,3);
		    mapear(489,509,3);
		    mapear(220,510,3);
		    mapear(265,510,3);
		    mapear(307,510,3);
		    mapear(313,510,3);
		    mapear(351,510,2);
		    mapear(356,510,4);
		    mapear(397,510,2);
		    mapear(403,510,2);
		    mapear(445,510,3);
		    mapear(490,510,3);
		    mapear(35,511,4);
		    mapear(83,511,5);
		    mapear(126,511,4);
		    mapear(133,511,2);
	}
	 private void area_68(){
		    mapear(171,511,2);
		    mapear(177,511,2);
		    mapear(219,511,3);
		    mapear(266,511,3);
		    mapear(306,511,3);
		    mapear(314,511,3);
		    mapear(444,511,3);
		    mapear(491,511,3);
		    mapear(36,512,4);
		    mapear(83,512,5);
		    mapear(126,512,5);
		    mapear(133,512,2);
		    mapear(170,512,4);
		    mapear(176,512,4);
		    mapear(37,513,4);
		    mapear(82,513,3);
		    mapear(86,513,3);
		    mapear(125,513,10);
		    mapear(170,513,4);
		    mapear(176,513,4);
		    mapear(220,513,4);
		    mapear(265,513,4);
		    mapear(310,513,4);
		    mapear(355,513,4);
		    mapear(400,513,4);
		    mapear(436,513,20);
		    mapear(481,513,20);
		    mapear(38,514,3);
		    mapear(82,514,3);
		    mapear(86,514,3);
		    mapear(125,514,2);
		    mapear(129,514,5);
		    mapear(171,514,2);
		    mapear(177,514,2);
		    mapear(219,514,5);
		    mapear(264,514,5);
		    mapear(309,514,5);
		    mapear(354,514,5);
		    mapear(399,514,5);
		    mapear(436,514,20);
		    mapear(481,514,20);
		    mapear(39,515,3);
		    mapear(81,515,3);
		    mapear(87,515,3);
		    mapear(125,515,2);
		    mapear(130,515,4);
		    mapear(219,515,6);
		    mapear(264,515,6);
		    mapear(309,515,6);
		    mapear(354,515,6);
	}
	 private void area_69(){
		    mapear(399,515,6);
		    mapear(439,515,5);
		    mapear(454,515,2);
		    mapear(484,515,5);
		    mapear(499,515,2);
		    mapear(40,516,3);
		    mapear(80,516,3);
		    mapear(88,516,3);
		    mapear(218,516,7);
		    mapear(263,516,7);
		    mapear(308,516,7);
		    mapear(353,516,7);
		    mapear(398,516,7);
		    mapear(439,516,5);
		    mapear(454,516,2);
		    mapear(484,516,5);
		    mapear(499,516,2);
		    mapear(218,517,7);
		    mapear(263,517,7);
		    mapear(308,517,7);
		    mapear(353,517,7);
		    mapear(398,517,7);
		    mapear(439,517,5);
		    mapear(454,517,2);
		    mapear(484,517,5);
		    mapear(499,517,2);
		    mapear(218,518,8);
		    mapear(263,518,8);
		    mapear(308,518,8);
		    mapear(353,518,8);
		    mapear(398,518,8);
		    mapear(439,518,5);
		    mapear(484,518,5);
		    mapear(217,519,2);
		    mapear(221,519,5);
		    mapear(262,519,2);
		    mapear(266,519,5);
		    mapear(307,519,2);
		    mapear(311,519,5);
		    mapear(352,519,2);
		    mapear(356,519,5);
		    mapear(397,519,2);
		    mapear(401,519,5);
		    mapear(439,519,5);
		    mapear(451,519,2);
		    mapear(484,519,5);
		    mapear(496,519,2);
		    mapear(31,520,7);
		    mapear(42,520,7);
		    mapear(76,520,7);
	}
	 private void area_70(){
		    mapear(87,520,7);
		    mapear(121,520,7);
		    mapear(132,520,7);
		    mapear(166,520,7);
		    mapear(177,520,7);
		    mapear(217,520,2);
		    mapear(221,520,6);
		    mapear(262,520,2);
		    mapear(266,520,6);
		    mapear(307,520,2);
		    mapear(311,520,6);
		    mapear(352,520,2);
		    mapear(356,520,6);
		    mapear(397,520,2);
		    mapear(401,520,6);
		    mapear(439,520,5);
		    mapear(451,520,2);
		    mapear(484,520,5);
		    mapear(496,520,2);
		    mapear(31,521,7);
		    mapear(42,521,7);
		    mapear(76,521,7);
		    mapear(87,521,7);
		    mapear(121,521,7);
		    mapear(132,521,7);
		    mapear(166,521,7);
		    mapear(177,521,7);
		    mapear(216,521,3);
		    mapear(222,521,5);
		    mapear(261,521,3);
		    mapear(267,521,5);
		    mapear(306,521,3);
		    mapear(312,521,5);
		    mapear(351,521,3);
		    mapear(357,521,5);
		    mapear(396,521,3);
		    mapear(402,521,5);
		    mapear(439,521,5);
		    mapear(451,521,2);
		    mapear(484,521,5);
		    mapear(496,521,2);
		    mapear(33,522,5);
		    mapear(44,522,5);
		    mapear(78,522,5);
		    mapear(89,522,5);
		    mapear(123,522,5);
		    mapear(134,522,5);
		    mapear(168,522,5);
		    mapear(179,522,5);
		    mapear(216,522,2);
	}
	 private void area_71(){
		    mapear(222,522,5);
		    mapear(261,522,2);
		    mapear(267,522,5);
		    mapear(306,522,2);
		    mapear(312,522,5);
		    mapear(351,522,2);
		    mapear(357,522,5);
		    mapear(396,522,2);
		    mapear(402,522,5);
		    mapear(439,522,14);
		    mapear(484,522,14);
		    mapear(33,523,5);
		    mapear(44,523,5);
		    mapear(78,523,5);
		    mapear(89,523,5);
		    mapear(123,523,5);
		    mapear(134,523,5);
		    mapear(168,523,5);
		    mapear(179,523,5);
		    mapear(216,523,2);
		    mapear(222,523,6);
		    mapear(261,523,2);
		    mapear(267,523,6);
		    mapear(306,523,2);
		    mapear(312,523,6);
		    mapear(351,523,2);
		    mapear(357,523,6);
		    mapear(396,523,2);
		    mapear(402,523,6);
		    mapear(439,523,14);
		    mapear(484,523,14);
		    mapear(33,524,5);
		    mapear(44,524,5);
		    mapear(78,524,5);
		    mapear(89,524,5);
		    mapear(123,524,5);
		    mapear(134,524,5);
		    mapear(168,524,5);
		    mapear(179,524,5);
		    mapear(215,524,2);
		    mapear(223,524,5);
		    mapear(260,524,2);
		    mapear(268,524,5);
		    mapear(305,524,2);
		    mapear(313,524,5);
		    mapear(350,524,2);
		    mapear(358,524,5);
		    mapear(395,524,2);
		    mapear(403,524,5);
		    mapear(439,524,5);
	}
	 private void area_72(){
		    mapear(451,524,2);
		    mapear(484,524,5);
		    mapear(496,524,2);
		    mapear(33,525,5);
		    mapear(44,525,5);
		    mapear(78,525,5);
		    mapear(89,525,5);
		    mapear(123,525,5);
		    mapear(134,525,5);
		    mapear(168,525,5);
		    mapear(179,525,5);
		    mapear(215,525,2);
		    mapear(223,525,6);
		    mapear(260,525,2);
		    mapear(268,525,6);
		    mapear(305,525,2);
		    mapear(313,525,6);
		    mapear(350,525,2);
		    mapear(358,525,6);
		    mapear(395,525,2);
		    mapear(403,525,6);
		    mapear(439,525,5);
		    mapear(451,525,2);
		    mapear(484,525,5);
		    mapear(496,525,2);
		    mapear(33,526,5);
		    mapear(44,526,5);
		    mapear(78,526,5);
		    mapear(89,526,5);
		    mapear(123,526,5);
		    mapear(134,526,5);
		    mapear(168,526,5);
		    mapear(179,526,5);
		    mapear(214,526,2);
		    mapear(224,526,5);
		    mapear(259,526,2);
		    mapear(269,526,5);
		    mapear(304,526,2);
		    mapear(314,526,5);
		    mapear(349,526,2);
		    mapear(359,526,5);
		    mapear(394,526,2);
		    mapear(404,526,5);
		    mapear(439,526,5);
		    mapear(451,526,2);
		    mapear(484,526,5);
		    mapear(496,526,2);
		    mapear(33,527,5);
		    mapear(44,527,5);
		    mapear(78,527,5);
	}
	 private void area_73(){
		    mapear(89,527,5);
		    mapear(123,527,5);
		    mapear(134,527,5);
		    mapear(168,527,5);
		    mapear(179,527,5);
		    mapear(214,527,16);
		    mapear(259,527,16);
		    mapear(304,527,16);
		    mapear(349,527,16);
		    mapear(394,527,16);
		    mapear(439,527,5);
		    mapear(484,527,5);
		    mapear(33,528,5);
		    mapear(44,528,5);
		    mapear(78,528,5);
		    mapear(89,528,5);
		    mapear(123,528,5);
		    mapear(134,528,5);
		    mapear(168,528,5);
		    mapear(179,528,5);
		    mapear(213,528,17);
		    mapear(258,528,17);
		    mapear(303,528,17);
		    mapear(348,528,17);
		    mapear(393,528,17);
		    mapear(439,528,5);
		    mapear(484,528,5);
		    mapear(33,529,5);
		    mapear(44,529,5);
		    mapear(78,529,5);
		    mapear(89,529,5);
		    mapear(123,529,5);
		    mapear(134,529,5);
		    mapear(168,529,5);
		    mapear(179,529,5);
		    mapear(213,529,2);
		    mapear(225,529,5);
		    mapear(258,529,2);
		    mapear(270,529,5);
		    mapear(303,529,2);
		    mapear(315,529,5);
		    mapear(348,529,2);
		    mapear(360,529,5);
		    mapear(393,529,2);
		    mapear(405,529,5);
		    mapear(439,529,5);
		    mapear(484,529,5);
		    mapear(33,530,5);
		    mapear(44,530,5);
		    mapear(78,530,5);
	}
	 private void area_74(){
		    mapear(89,530,5);
		    mapear(123,530,5);
		    mapear(134,530,5);
		    mapear(168,530,5);
		    mapear(179,530,5);
		    mapear(213,530,2);
		    mapear(225,530,6);
		    mapear(258,530,2);
		    mapear(270,530,6);
		    mapear(303,530,2);
		    mapear(315,530,6);
		    mapear(348,530,2);
		    mapear(360,530,6);
		    mapear(393,530,2);
		    mapear(405,530,6);
		    mapear(439,530,5);
		    mapear(454,530,2);
		    mapear(484,530,5);
		    mapear(499,530,2);
		    mapear(33,531,5);
		    mapear(43,531,6);
		    mapear(78,531,5);
		    mapear(88,531,6);
		    mapear(123,531,5);
		    mapear(133,531,6);
		    mapear(168,531,5);
		    mapear(178,531,6);
		    mapear(212,531,2);
		    mapear(226,531,5);
		    mapear(257,531,2);
		    mapear(271,531,5);
		    mapear(302,531,2);
		    mapear(316,531,5);
		    mapear(347,531,2);
		    mapear(361,531,5);
		    mapear(392,531,2);
		    mapear(406,531,5);
		    mapear(439,531,5);
		    mapear(454,531,2);
		    mapear(484,531,5);
		    mapear(499,531,2);
		    mapear(34,532,5);
		    mapear(43,532,6);
		    mapear(79,532,5);
		    mapear(88,532,6);
		    mapear(124,532,5);
		    mapear(133,532,6);
		    mapear(169,532,5);
		    mapear(178,532,6);
		    mapear(212,532,2);
	}
	 private void area_75(){
		    mapear(226,532,6);
		    mapear(257,532,2);
		    mapear(271,532,6);
		    mapear(302,532,2);
		    mapear(316,532,6);
		    mapear(347,532,2);
		    mapear(361,532,6);
		    mapear(392,532,2);
		    mapear(406,532,6);
		    mapear(439,532,5);
		    mapear(454,532,2);
		    mapear(484,532,5);
		    mapear(499,532,2);
		    mapear(34,533,9);
		    mapear(44,533,7);
		    mapear(79,533,9);
		    mapear(89,533,7);
		    mapear(124,533,9);
		    mapear(134,533,7);
		    mapear(169,533,9);
		    mapear(179,533,7);
		    mapear(210,533,6);
		    mapear(225,533,9);
		    mapear(255,533,6);
		    mapear(270,533,9);
		    mapear(300,533,6);
		    mapear(315,533,9);
		    mapear(345,533,6);
		    mapear(360,533,9);
		    mapear(390,533,6);
		    mapear(405,533,9);
		    mapear(436,533,20);
		    mapear(481,533,20);
		    mapear(36,534,6);
		    mapear(44,534,7);
		    mapear(81,534,6);
		    mapear(89,534,7);
		    mapear(126,534,6);
		    mapear(134,534,7);
		    mapear(171,534,6);
		    mapear(179,534,7);
		    mapear(210,534,6);
		    mapear(225,534,9);
		    mapear(255,534,6);
		    mapear(270,534,9);
		    mapear(300,534,6);
		    mapear(315,534,9);
		    mapear(345,534,6);
		    mapear(360,534,9);
		    mapear(390,534,6);
	}
	 private void area_76(){
		    mapear(405,534,9);
		    mapear(436,534,20);
		    mapear(481,534,20);
		    mapear(82,557,4);
		    mapear(89,557,2);
		    mapear(127,557,2);
		    mapear(133,557,2);
		    mapear(348,557,2);
		    mapear(354,557,2);
		    mapear(39,558,5);
		    mapear(81,558,10);
		    mapear(126,558,4);
		    mapear(132,558,4);
		    mapear(172,558,4);
		    mapear(214,558,4);
		    mapear(260,558,5);
		    mapear(303,558,4);
		    mapear(310,558,2);
		    mapear(347,558,4);
		    mapear(353,558,4);
		    mapear(403,558,4);
		    mapear(445,558,4);
		    mapear(491,558,5);
		    mapear(38,559,7);
		    mapear(81,559,2);
		    mapear(86,559,4);
		    mapear(126,559,4);
		    mapear(132,559,4);
		    mapear(172,559,3);
		    mapear(215,559,3);
		    mapear(259,559,7);
		    mapear(302,559,10);
		    mapear(347,559,4);
		    mapear(353,559,4);
		    mapear(403,559,3);
		    mapear(446,559,3);
		    mapear(490,559,7);
		    mapear(37,560,3);
		    mapear(43,560,3);
		    mapear(127,560,2);
		    mapear(133,560,2);
		    mapear(171,560,3);
		    mapear(216,560,3);
		    mapear(258,560,3);
		    mapear(264,560,3);
		    mapear(302,560,2);
		    mapear(307,560,4);
		    mapear(348,560,2);
		    mapear(354,560,2);
		    mapear(402,560,3);
	}
	 private void area_77(){
		    mapear(447,560,3);
		    mapear(489,560,3);
		    mapear(495,560,3);
		    mapear(36,561,3);
		    mapear(44,561,3);
		    mapear(170,561,3);
		    mapear(217,561,3);
		    mapear(257,561,3);
		    mapear(265,561,3);
		    mapear(401,561,3);
		    mapear(448,561,3);
		    mapear(488,561,3);
		    mapear(496,561,3);
		    mapear(31,563,20);
		    mapear(76,563,20);
		    mapear(121,563,20);
		    mapear(166,563,11);
		    mapear(211,563,11);
		    mapear(256,563,11);
		    mapear(301,563,11);
		    mapear(346,563,11);
		    mapear(399,563,8);
		    mapear(444,563,8);
		    mapear(489,563,8);
		    mapear(31,564,20);
		    mapear(76,564,20);
		    mapear(121,564,20);
		    mapear(166,564,11);
		    mapear(211,564,11);
		    mapear(256,564,11);
		    mapear(301,564,11);
		    mapear(346,564,11);
		    mapear(396,564,14);
		    mapear(441,564,14);
		    mapear(486,564,14);
		    mapear(34,565,5);
		    mapear(49,565,2);
		    mapear(79,565,5);
		    mapear(94,565,2);
		    mapear(124,565,5);
		    mapear(139,565,2);
		    mapear(169,565,5);
		    mapear(214,565,5);
		    mapear(259,565,5);
		    mapear(304,565,5);
		    mapear(349,565,5);
		    mapear(395,565,5);
		    mapear(406,565,5);
		    mapear(440,565,5);
		    mapear(451,565,5);
	}
	 private void area_78(){
		    mapear(485,565,5);
		    mapear(496,565,5);
		    mapear(34,566,5);
		    mapear(49,566,2);
		    mapear(79,566,5);
		    mapear(94,566,2);
		    mapear(124,566,5);
		    mapear(139,566,2);
		    mapear(169,566,5);
		    mapear(214,566,5);
		    mapear(259,566,5);
		    mapear(304,566,5);
		    mapear(349,566,5);
		    mapear(394,566,4);
		    mapear(408,566,4);
		    mapear(439,566,4);
		    mapear(453,566,4);
		    mapear(484,566,4);
		    mapear(498,566,4);
		    mapear(34,567,5);
		    mapear(49,567,2);
		    mapear(79,567,5);
		    mapear(94,567,2);
		    mapear(124,567,5);
		    mapear(139,567,2);
		    mapear(169,567,5);
		    mapear(214,567,5);
		    mapear(259,567,5);
		    mapear(304,567,5);
		    mapear(349,567,5);
		    mapear(393,567,5);
		    mapear(408,567,5);
		    mapear(438,567,5);
		    mapear(453,567,5);
		    mapear(483,567,5);
		    mapear(498,567,5);
		    mapear(34,568,5);
		    mapear(79,568,5);
		    mapear(124,568,5);
		    mapear(169,568,5);
		    mapear(214,568,5);
		    mapear(259,568,5);
		    mapear(304,568,5);
		    mapear(349,568,5);
		    mapear(392,568,5);
		    mapear(409,568,5);
		    mapear(437,568,5);
		    mapear(454,568,5);
		    mapear(482,568,5);
		    mapear(499,568,5);
	}
	 private void area_79(){
		    mapear(34,569,5);
		    mapear(46,569,2);
		    mapear(79,569,5);
		    mapear(91,569,2);
		    mapear(124,569,5);
		    mapear(136,569,2);
		    mapear(169,569,5);
		    mapear(214,569,5);
		    mapear(259,569,5);
		    mapear(304,569,5);
		    mapear(349,569,5);
		    mapear(392,569,5);
		    mapear(409,569,5);
		    mapear(437,569,5);
		    mapear(454,569,5);
		    mapear(482,569,5);
		    mapear(499,569,5);
		    mapear(34,570,5);
		    mapear(46,570,2);
		    mapear(79,570,5);
		    mapear(91,570,2);
		    mapear(124,570,5);
		    mapear(136,570,2);
		    mapear(169,570,5);
		    mapear(214,570,5);
		    mapear(259,570,5);
		    mapear(304,570,5);
		    mapear(349,570,5);
		    mapear(391,570,5);
		    mapear(410,570,5);
		    mapear(436,570,5);
		    mapear(455,570,5);
		    mapear(481,570,5);
		    mapear(500,570,5);
		    mapear(34,571,5);
		    mapear(46,571,2);
		    mapear(79,571,5);
		    mapear(91,571,2);
		    mapear(124,571,5);
		    mapear(136,571,2);
		    mapear(169,571,5);
		    mapear(214,571,5);
		    mapear(259,571,5);
		    mapear(304,571,5);
		    mapear(349,571,5);
		    mapear(391,571,5);
		    mapear(410,571,5);
		    mapear(436,571,5);
		    mapear(455,571,5);
		    mapear(481,571,5);
	}
	 private void area_80(){
		    mapear(500,571,5);
		    mapear(34,572,14);
		    mapear(79,572,14);
		    mapear(124,572,14);
		    mapear(169,572,5);
		    mapear(214,572,5);
		    mapear(259,572,5);
		    mapear(304,572,5);
		    mapear(349,572,5);
		    mapear(391,572,5);
		    mapear(410,572,5);
		    mapear(436,572,5);
		    mapear(455,572,5);
		    mapear(481,572,5);
		    mapear(500,572,5);
		    mapear(34,573,14);
		    mapear(79,573,14);
		    mapear(124,573,14);
		    mapear(169,573,5);
		    mapear(214,573,5);
		    mapear(259,573,5);
		    mapear(304,573,5);
		    mapear(349,573,5);
		    mapear(391,573,5);
		    mapear(410,573,5);
		    mapear(436,573,5);
		    mapear(455,573,5);
		    mapear(481,573,5);
		    mapear(500,573,5);
		    mapear(34,574,5);
		    mapear(46,574,2);
		    mapear(79,574,5);
		    mapear(91,574,2);
		    mapear(124,574,5);
		    mapear(136,574,2);
		    mapear(169,574,5);
		    mapear(214,574,5);
		    mapear(259,574,5);
		    mapear(304,574,5);
		    mapear(349,574,5);
		    mapear(391,574,5);
		    mapear(410,574,5);
		    mapear(436,574,5);
		    mapear(455,574,5);
		    mapear(481,574,5);
		    mapear(500,574,5);
		    mapear(34,575,5);
		    mapear(46,575,2);
		    mapear(79,575,5);
		    mapear(91,575,2);
	}
	 private void area_81(){
		    mapear(124,575,5);
		    mapear(136,575,2);
		    mapear(169,575,5);
		    mapear(214,575,5);
		    mapear(259,575,5);
		    mapear(304,575,5);
		    mapear(349,575,5);
		    mapear(391,575,5);
		    mapear(410,575,5);
		    mapear(436,575,5);
		    mapear(455,575,5);
		    mapear(481,575,5);
		    mapear(500,575,5);
		    mapear(34,576,5);
		    mapear(46,576,2);
		    mapear(79,576,5);
		    mapear(91,576,2);
		    mapear(124,576,5);
		    mapear(136,576,2);
		    mapear(169,576,5);
		    mapear(214,576,5);
		    mapear(259,576,5);
		    mapear(304,576,5);
		    mapear(349,576,5);
		    mapear(391,576,5);
		    mapear(410,576,5);
		    mapear(436,576,5);
		    mapear(455,576,5);
		    mapear(481,576,5);
		    mapear(500,576,5);
		    mapear(34,577,5);
		    mapear(79,577,5);
		    mapear(124,577,5);
		    mapear(169,577,5);
		    mapear(214,577,5);
		    mapear(259,577,5);
		    mapear(304,577,5);
		    mapear(349,577,5);
		    mapear(391,577,5);
		    mapear(410,577,5);
		    mapear(436,577,5);
		    mapear(455,577,5);
		    mapear(481,577,5);
		    mapear(500,577,5);
		    mapear(34,578,5);
		    mapear(79,578,5);
		    mapear(124,578,5);
		    mapear(169,578,5);
		    mapear(214,578,5);
		    mapear(259,578,5);
	}
	 private void area_82(){
		    mapear(304,578,5);
		    mapear(349,578,5);
		    mapear(392,578,5);
		    mapear(409,578,5);
		    mapear(437,578,5);
		    mapear(454,578,5);
		    mapear(482,578,5);
		    mapear(499,578,5);
		    mapear(34,579,5);
		    mapear(79,579,5);
		    mapear(124,579,5);
		    mapear(169,579,5);
		    mapear(214,579,5);
		    mapear(259,579,5);
		    mapear(304,579,5);
		    mapear(349,579,5);
		    mapear(392,579,5);
		    mapear(409,579,5);
		    mapear(437,579,5);
		    mapear(454,579,5);
		    mapear(482,579,5);
		    mapear(499,579,5);
		    mapear(34,580,5);
		    mapear(49,580,2);
		    mapear(79,580,5);
		    mapear(94,580,2);
		    mapear(124,580,5);
		    mapear(139,580,2);
		    mapear(169,580,5);
		    mapear(214,580,5);
		    mapear(259,580,5);
		    mapear(304,580,5);
		    mapear(349,580,5);
		    mapear(393,580,5);
		    mapear(408,580,5);
		    mapear(438,580,5);
		    mapear(453,580,5);
		    mapear(483,580,5);
		    mapear(498,580,5);
		    mapear(34,581,5);
		    mapear(49,581,2);
		    mapear(79,581,5);
		    mapear(94,581,2);
		    mapear(124,581,5);
		    mapear(139,581,2);
		    mapear(169,581,5);
		    mapear(214,581,5);
		    mapear(259,581,5);
		    mapear(304,581,5);
		    mapear(349,581,5);
	}
	 private void area_83(){
		    mapear(394,581,4);
		    mapear(408,581,4);
		    mapear(439,581,4);
		    mapear(453,581,4);
		    mapear(484,581,4);
		    mapear(498,581,4);
		    mapear(34,582,5);
		    mapear(49,582,2);
		    mapear(79,582,5);
		    mapear(94,582,2);
		    mapear(124,582,5);
		    mapear(139,582,2);
		    mapear(169,582,5);
		    mapear(214,582,5);
		    mapear(259,582,5);
		    mapear(304,582,5);
		    mapear(349,582,5);
		    mapear(395,582,5);
		    mapear(406,582,5);
		    mapear(440,582,5);
		    mapear(451,582,5);
		    mapear(485,582,5);
		    mapear(496,582,5);
		    mapear(31,583,20);
		    mapear(76,583,20);
		    mapear(121,583,20);
		    mapear(166,583,11);
		    mapear(211,583,11);
		    mapear(256,583,11);
		    mapear(301,583,11);
		    mapear(346,583,11);
		    mapear(396,583,14);
		    mapear(441,583,14);
		    mapear(486,583,14);
		    mapear(31,584,20);
		    mapear(76,584,20);
		    mapear(121,584,20);
		    mapear(166,584,11);
		    mapear(211,584,11);
		    mapear(256,584,11);
		    mapear(301,584,11);
		    mapear(346,584,11);
		    mapear(399,584,8);
		    mapear(444,584,8);
		    mapear(489,584,8);
		    mapear(84,607,2);
		    mapear(90,607,2);
		    mapear(309,607,2);
		    mapear(315,607,2);
		    mapear(39,608,4);
	}
	 private void area_84(){
		    mapear(46,608,2);
		    mapear(83,608,4);
		    mapear(89,608,4);
		    mapear(133,608,4);
		    mapear(175,608,4);
		    mapear(221,608,5);
		    mapear(264,608,4);
		    mapear(271,608,2);
		    mapear(308,608,4);
		    mapear(314,608,4);
		    mapear(38,609,10);
		    mapear(83,609,4);
		    mapear(89,609,4);
		    mapear(133,609,3);
		    mapear(176,609,3);
		    mapear(220,609,7);
		    mapear(263,609,10);
		    mapear(308,609,4);
		    mapear(314,609,4);
		    mapear(38,610,2);
		    mapear(43,610,4);
		    mapear(84,610,2);
		    mapear(90,610,2);
		    mapear(132,610,3);
		    mapear(177,610,3);
		    mapear(219,610,3);
		    mapear(225,610,3);
		    mapear(263,610,2);
		    mapear(268,610,4);
		    mapear(309,610,2);
		    mapear(315,610,2);
		    mapear(131,611,3);
		    mapear(178,611,3);
		    mapear(218,611,3);
		    mapear(226,611,3);
		    mapear(39,613,8);
		    mapear(84,613,8);
		    mapear(121,613,11);
		    mapear(138,613,8);
		    mapear(166,613,11);
		    mapear(183,613,8);
		    mapear(211,613,11);
		    mapear(228,613,8);
		    mapear(256,613,11);
		    mapear(273,613,8);
		    mapear(301,613,11);
		    mapear(318,613,8);
		    mapear(36,614,14);
		    mapear(81,614,14);
		    mapear(121,614,11);
	}
	 private void area_85(){
		    mapear(138,614,8);
		    mapear(166,614,11);
		    mapear(183,614,8);
		    mapear(211,614,11);
		    mapear(228,614,8);
		    mapear(256,614,11);
		    mapear(273,614,8);
		    mapear(301,614,11);
		    mapear(318,614,8);
		    mapear(35,615,5);
		    mapear(46,615,5);
		    mapear(80,615,5);
		    mapear(91,615,5);
		    mapear(124,615,5);
		    mapear(141,615,2);
		    mapear(169,615,5);
		    mapear(186,615,2);
		    mapear(214,615,5);
		    mapear(231,615,2);
		    mapear(259,615,5);
		    mapear(276,615,2);
		    mapear(304,615,5);
		    mapear(321,615,2);
		    mapear(34,616,4);
		    mapear(48,616,4);
		    mapear(79,616,4);
		    mapear(93,616,4);
		    mapear(124,616,5);
		    mapear(141,616,2);
		    mapear(169,616,5);
		    mapear(186,616,2);
		    mapear(214,616,5);
		    mapear(231,616,2);
		    mapear(259,616,5);
		    mapear(276,616,2);
		    mapear(304,616,5);
		    mapear(321,616,2);
		    mapear(33,617,5);
		    mapear(48,617,5);
		    mapear(78,617,5);
		    mapear(93,617,5);
		    mapear(124,617,5);
		    mapear(141,617,2);
		    mapear(169,617,5);
		    mapear(186,617,2);
		    mapear(214,617,5);
		    mapear(231,617,2);
		    mapear(259,617,5);
		    mapear(276,617,2);
		    mapear(304,617,5);
	}
	 private void area_86(){
		    mapear(321,617,2);
		    mapear(32,618,5);
		    mapear(49,618,5);
		    mapear(77,618,5);
		    mapear(94,618,5);
		    mapear(124,618,5);
		    mapear(141,618,2);
		    mapear(169,618,5);
		    mapear(186,618,2);
		    mapear(214,618,5);
		    mapear(231,618,2);
		    mapear(259,618,5);
		    mapear(276,618,2);
		    mapear(304,618,5);
		    mapear(321,618,2);
		    mapear(32,619,5);
		    mapear(49,619,5);
		    mapear(77,619,5);
		    mapear(94,619,5);
		    mapear(124,619,5);
		    mapear(141,619,2);
		    mapear(169,619,5);
		    mapear(186,619,2);
		    mapear(214,619,5);
		    mapear(231,619,2);
		    mapear(259,619,5);
		    mapear(276,619,2);
		    mapear(304,619,5);
		    mapear(321,619,2);
		    mapear(31,620,5);
		    mapear(50,620,5);
		    mapear(76,620,5);
		    mapear(95,620,5);
		    mapear(124,620,5);
		    mapear(141,620,2);
		    mapear(169,620,5);
		    mapear(186,620,2);
		    mapear(214,620,5);
		    mapear(231,620,2);
		    mapear(259,620,5);
		    mapear(276,620,2);
		    mapear(304,620,5);
		    mapear(321,620,2);
		    mapear(31,621,5);
		    mapear(50,621,5);
		    mapear(76,621,5);
		    mapear(95,621,5);
		    mapear(124,621,5);
		    mapear(141,621,2);
		    mapear(169,621,5);
	}
	 private void area_87(){
		    mapear(186,621,2);
		    mapear(214,621,5);
		    mapear(231,621,2);
		    mapear(259,621,5);
		    mapear(276,621,2);
		    mapear(304,621,5);
		    mapear(321,621,2);
		    mapear(31,622,5);
		    mapear(50,622,5);
		    mapear(76,622,5);
		    mapear(95,622,5);
		    mapear(124,622,5);
		    mapear(141,622,2);
		    mapear(169,622,5);
		    mapear(186,622,2);
		    mapear(214,622,5);
		    mapear(231,622,2);
		    mapear(259,622,5);
		    mapear(276,622,2);
		    mapear(304,622,5);
		    mapear(321,622,2);
		    mapear(31,623,5);
		    mapear(50,623,5);
		    mapear(76,623,5);
		    mapear(95,623,5);
		    mapear(124,623,5);
		    mapear(141,623,2);
		    mapear(169,623,5);
		    mapear(186,623,2);
		    mapear(214,623,5);
		    mapear(231,623,2);
		    mapear(259,623,5);
		    mapear(276,623,2);
		    mapear(304,623,5);
		    mapear(321,623,2);
		    mapear(31,624,5);
		    mapear(50,624,5);
		    mapear(76,624,5);
		    mapear(95,624,5);
		    mapear(124,624,5);
		    mapear(141,624,2);
		    mapear(169,624,5);
		    mapear(186,624,2);
		    mapear(214,624,5);
		    mapear(231,624,2);
		    mapear(259,624,5);
		    mapear(276,624,2);
		    mapear(304,624,5);
		    mapear(321,624,2);
		    mapear(31,625,5);
	}
	 private void area_88(){
		    mapear(50,625,5);
		    mapear(76,625,5);
		    mapear(95,625,5);
		    mapear(124,625,5);
		    mapear(141,625,2);
		    mapear(169,625,5);
		    mapear(186,625,2);
		    mapear(214,625,5);
		    mapear(231,625,2);
		    mapear(259,625,5);
		    mapear(276,625,2);
		    mapear(304,625,5);
		    mapear(321,625,2);
		    mapear(31,626,5);
		    mapear(50,626,5);
		    mapear(76,626,5);
		    mapear(95,626,5);
		    mapear(124,626,5);
		    mapear(141,626,2);
		    mapear(169,626,5);
		    mapear(186,626,2);
		    mapear(214,626,5);
		    mapear(231,626,2);
		    mapear(259,626,5);
		    mapear(276,626,2);
		    mapear(304,626,5);
		    mapear(321,626,2);
		    mapear(31,627,5);
		    mapear(50,627,5);
		    mapear(76,627,5);
		    mapear(95,627,5);
		    mapear(124,627,5);
		    mapear(141,627,2);
		    mapear(169,627,5);
		    mapear(186,627,2);
		    mapear(214,627,5);
		    mapear(231,627,2);
		    mapear(259,627,5);
		    mapear(276,627,2);
		    mapear(304,627,5);
		    mapear(321,627,2);
		    mapear(32,628,5);
		    mapear(49,628,5);
		    mapear(77,628,5);
		    mapear(94,628,5);
		    mapear(124,628,5);
		    mapear(141,628,2);
		    mapear(169,628,5);
		    mapear(186,628,2);
		    mapear(214,628,5);
	}
	 private void area_89(){
		    mapear(231,628,2);
		    mapear(259,628,5);
		    mapear(276,628,2);
		    mapear(304,628,5);
		    mapear(321,628,2);
		    mapear(32,629,5);
		    mapear(49,629,5);
		    mapear(77,629,5);
		    mapear(94,629,5);
		    mapear(124,629,5);
		    mapear(141,629,2);
		    mapear(169,629,5);
		    mapear(186,629,2);
		    mapear(214,629,5);
		    mapear(231,629,2);
		    mapear(259,629,5);
		    mapear(276,629,2);
		    mapear(304,629,5);
		    mapear(321,629,2);
		    mapear(33,630,5);
		    mapear(48,630,5);
		    mapear(78,630,5);
		    mapear(93,630,5);
		    mapear(125,630,5);
		    mapear(140,630,2);
		    mapear(170,630,5);
		    mapear(185,630,2);
		    mapear(215,630,5);
		    mapear(230,630,2);
		    mapear(260,630,5);
		    mapear(275,630,2);
		    mapear(305,630,5);
		    mapear(320,630,2);
		    mapear(34,631,4);
		    mapear(48,631,4);
		    mapear(79,631,4);
		    mapear(93,631,4);
		    mapear(125,631,5);
		    mapear(140,631,2);
		    mapear(170,631,5);
		    mapear(185,631,2);
		    mapear(215,631,5);
		    mapear(230,631,2);
		    mapear(260,631,5);
		    mapear(275,631,2);
		    mapear(305,631,5);
		    mapear(320,631,2);
		    mapear(35,632,5);
		    mapear(46,632,5);
		    mapear(80,632,5);
	}
	 private void area_90(){
		    mapear(91,632,5);
		    mapear(126,632,6);
		    mapear(138,632,3);
		    mapear(171,632,6);
		    mapear(183,632,3);
		    mapear(216,632,6);
		    mapear(228,632,3);
		    mapear(261,632,6);
		    mapear(273,632,3);
		    mapear(306,632,6);
		    mapear(318,632,3);
		    mapear(36,633,14);
		    mapear(81,633,14);
		    mapear(127,633,13);
		    mapear(172,633,13);
		    mapear(217,633,13);
		    mapear(262,633,13);
		    mapear(307,633,13);
		    mapear(39,634,8);
		    mapear(84,634,8);
		    mapear(129,634,9);
		    mapear(174,634,9);
		    mapear(219,634,9);
		    mapear(264,634,9);
		    mapear(309,634,9);
	}
}